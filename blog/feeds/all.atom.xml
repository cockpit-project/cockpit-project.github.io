<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cockpit Project</title><link href="http://cockpit-project.org/blog/" rel="alternate"></link><link href="http://cockpit-project.org/blog/feeds/all.atom.xml" rel="self"></link><id>http://cockpit-project.org/blog/</id><updated>2017-03-09T18:00:00+00:00</updated><entry><title>Cockpit 134</title><link href="http://cockpit-project.org/blog/cockpit-134.html" rel="alternate"></link><published>2017-03-09T18:00:00+00:00</published><updated>2017-03-09T18:00:00+00:00</updated><author><name>Dominik Perpeet</name></author><id>tag:cockpit-project.org,2017-03-09:/blog/cockpit-134.html</id><summary type="html">&lt;p&gt;Cockpit is now fully&amp;nbsp;translatable&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release regularly.
Here are the release notes from version&amp;nbsp;134.&lt;/p&gt;
&lt;h3&gt;Login page is now&amp;nbsp;translatable&lt;/h3&gt;
&lt;p&gt;The majority of Cockpit has long been translatable. Since the login page is a bit of a special case, it required some
special attention to make that also play well with the language display settings. Take a look at the video below for a demo.
Check out the Zanata link below, it&amp;#8217;s very easy to contribute translations to Cockpit.
At this time our top 3 translations (&amp;gt;90%) are Polish (pl), Ukranian (uk) and Chinese (zh-&lt;span class="caps"&gt;CN&lt;/span&gt;). Every bit of help
here is greatly appreciated and a big thank you to our&amp;nbsp;contributors!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fedora.zanata.org/project/view/cockpit?dswid=-8859"&gt;Cockpit&amp;nbsp;translations&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/_4jQ6NYSL-c?ecver=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Show message of the day on the System&amp;nbsp;page&lt;/h3&gt;
&lt;p&gt;Cockpit now supports one more feature it was previously missing compared to the command line login: the &lt;code&gt;System&lt;/code&gt;
page now shows the current message of the day (&lt;code&gt;/etc/motd&lt;/code&gt;). When dismissed by clicking on the &lt;code&gt;X&lt;/code&gt; close button,
the message is hidden until it&amp;nbsp;changes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Message of the day" src="http://cockpit-project.org/blog/images/cockpit-motd.png"&gt;&lt;/p&gt;
&lt;h3&gt;Expose fewer system service&amp;nbsp;actions&lt;/h3&gt;
&lt;p&gt;Cockpit previously exposed systemd unit actions such as &lt;code&gt;Reload or Try Restart&lt;/code&gt; which are primarily intended for
scripts. The dropdown list now only shows actions which are useful for interactive human usage: &lt;code&gt;Start&lt;/code&gt;, &lt;code&gt;Stop&lt;/code&gt;,
&lt;code&gt;Restart&lt;/code&gt; and &lt;code&gt;Reload&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Service actions" src="http://cockpit-project.org/blog/images/cockpit-service-actions.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 134 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/134"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-134-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit 133</title><link href="http://cockpit-project.org/blog/cockpit-133.html" rel="alternate"></link><published>2017-03-02T09:00:00+00:00</published><updated>2017-03-02T09:00:00+00:00</updated><author><name>Dominik Perpeet</name></author><id>tag:cockpit-project.org,2017-03-02:/blog/cockpit-133.html</id><summary type="html">&lt;p&gt;Cockpit supports alternate bridges via&amp;nbsp;packages&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from version&amp;nbsp;133.&lt;/p&gt;
&lt;h3&gt;Remotely managed machines are now configured in&amp;nbsp;/etc/cockpit/machines.d&lt;/h3&gt;
&lt;p&gt;Cockpit plugins, other packages, admins, &lt;span class="caps"&gt;VM&lt;/span&gt; management software, or config management systems like
Ansible/puppet/cloud-init might want to pre-configure machines for cockpit. Previously this information
was stored in &lt;code&gt;/var/lib/cockpit/machines.json&lt;/code&gt;, but now that information is stored in individual json
files in &lt;code&gt;/etc/cockpit/machines.d&lt;/code&gt;. Existing &lt;code&gt;machines.json&lt;/code&gt; files are migrated automatically to the new
format. Check out the documentation below for more information on the format and&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org/guide/133/feature-machines.html"&gt;Multiple machines&amp;nbsp;documentation&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Packages can register additional&amp;nbsp;bridges&lt;/h3&gt;
&lt;p&gt;On the server side the &lt;code&gt;cockpit-bridge&lt;/code&gt; connects to various system APIs. There are additional bridges for specific
tasks that the main &lt;code&gt;cockpit-bridge&lt;/code&gt; cannot handle, such as tasks that should be carried out with privilege
escalation. These additional bridges can be registered in the &lt;code&gt;bridges&lt;/code&gt; section of a package&amp;#8217;s &lt;code&gt;manifest.json&lt;/code&gt;
file. Check out the documentation below for more information on the format and&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org/guide/133/packages.html#package-bridges"&gt;Additional&amp;nbsp;bridges&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Split translations into individual&amp;nbsp;packages&lt;/h3&gt;
&lt;p&gt;Behind the scenes there&amp;#8217;s been a lot of work on making translations work more smoothly and future-proof.
As part of this the translations have been split into the individual packages, which also means they can be updated
per package in the future. Check out the Zanata link below, it&amp;#8217;s very easy to contribute translations to Cockpit.
At this time our top 3 translations (&amp;gt;90%) are Polish (pl), Ukranian (uk) and Chinese (zh-&lt;span class="caps"&gt;CN&lt;/span&gt;). Every bit of help
here is greatly appreciated and a big thank you to our&amp;nbsp;contributors!&lt;/p&gt;
&lt;p&gt;&lt;a href="https://fedora.zanata.org/project/view/cockpit?dswid=-8859"&gt;Cockpit&amp;nbsp;translations&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 133 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/133"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-133-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit 130, 131 and 132</title><link href="http://cockpit-project.org/blog/cockpit-132.html" rel="alternate"></link><published>2017-02-24T09:00:00+00:00</published><updated>2017-02-24T09:00:00+00:00</updated><author><name>Dominik Perpeet</name></author><id>tag:cockpit-project.org,2017-02-24:/blog/cockpit-132.html</id><summary type="html">&lt;p&gt;Cockpit supports configuring kdump and &lt;span class="caps"&gt;MAC&lt;/span&gt;&amp;nbsp;addresses&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from version 130, 131 and&amp;nbsp;132.&lt;/p&gt;
&lt;h3&gt;Kernel dump configuration support&amp;nbsp;added&lt;/h3&gt;
&lt;p&gt;Kernel crash dump configuration is now possible in Cockpit: view and toggle the status of the kdump service,
with hints how to enable if the kernel boot parameters need to be changed. Cockpit shows the amount of reserved
memory and setting a path for dumping the kernel on the local filesystem, with a toggle for compressing the crash dumps.
Take a look at the video below for a&amp;nbsp;demo.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/VXhuqPR2K5c?ecver=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;&lt;span class="caps"&gt;MAC&lt;/span&gt; addresses for ethernet adapters and bonds can be&amp;nbsp;modified&lt;/h3&gt;
&lt;p&gt;On the Networking page, &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses for ethernet adapters can now be clicked to edit them, starting with
NetworkManager version 1.4. For bonds, the &lt;span class="caps"&gt;MAC&lt;/span&gt; addresses are shown and can be edited starting with NetworkManager
version 1.6. Take a look at the video below for a&amp;nbsp;demo.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/JIHQmFHOrO4?ecver=1" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Show session virtual Machines on the machines&amp;nbsp;page&lt;/h3&gt;
&lt;p&gt;Libvirt differentiates between system virtual machines and session ones, which are tied to the user. In Cockpit
all the virtual machines accessible to the logged in user, system and session, are now shown in a combined&amp;nbsp;list.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Session virtual machines" src="http://cockpit-project.org/blog/images/cockpit-machines-session.png"&gt;&lt;/p&gt;
&lt;h3&gt;SELinux functionality is now available without&amp;nbsp;setroubleshootd&lt;/h3&gt;
&lt;p&gt;The SELinux page in Cockpit can do more than just troubleshoot. It was therefore renamed to &lt;code&gt;SELinux&lt;/code&gt; and
the functionality of toggling between enforcing/permissive mode is now also available even if &lt;code&gt;setroubleshoot-server&lt;/code&gt;
isn&amp;#8217;t installed. This was cause for unexpected behavior on Atomic Host systems without &lt;code&gt;setroubleshoot-server&lt;/code&gt;
where it&amp;#8217;s non-trivial and often undesired to add that&amp;nbsp;package.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SELinux without troubleshooting" src="http://cockpit-project.org/blog/images/cockpit-selinux-disabled.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 132 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/132"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-132-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Use the packages to install this version of Cockpit. When installing from the tarball, remove
/etc/systemd/system/cockpit.service.d/fatal.conf manually afterwards to prevent Cockpit from exiting in rare&amp;nbsp;cases.&lt;/p&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit 128 and 129</title><link href="http://cockpit-project.org/blog/cockpit-129.html" rel="alternate"></link><published>2017-01-19T09:00:00+00:00</published><updated>2017-01-19T09:00:00+00:00</updated><author><name>Dominik Perpeet</name></author><id>tag:cockpit-project.org,2017-01-19:/blog/cockpit-129.html</id><summary type="html">&lt;p&gt;Cockpit supports rebasing on Atomic Host with&amp;nbsp;OSTree.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from version 128 and&amp;nbsp;129.&lt;/p&gt;
&lt;h3&gt;Manage remotes and rebasing in&amp;nbsp;OSTree&lt;/h3&gt;
&lt;p&gt;When working with OSTrees on operating systems like &lt;a href="http://www.projectatomic.io/docs/os-updates/"&gt;Atomic Host&lt;/a&gt;
there will often be multiple branches to choose from. For example there may be a beta version of the operating system.
Thanks to Peter&amp;#8217;s work, Cockpit can now switch between branches and view and activate OSTrees from those branches.
Also, Cockpit supports managing multiple remotes and viewing their branches. Remotes are a way of describing
where OSTree should pull updates from. Take a look at the video below for a&amp;nbsp;demo.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/dF8M3xq9FcI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;The subpackage cockpit-dashboard has been split&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;The new &lt;code&gt;cockpit-dashboard&lt;/code&gt; subpackage contains the dashboard itself and
the &lt;code&gt;cockpit-ssh&lt;/code&gt; process. Eventually this paves the way for more flexibility
regarding authentication processes, but for now &lt;code&gt;cockpit-ws&lt;/code&gt; unconditionally
depends on &lt;code&gt;cockpit-dashboard&lt;/code&gt;, and also requires the identical versions.
Nothing changes for those who install the &lt;code&gt;cockpit&lt;/code&gt; package. But this allows more
flexibility when using Cockpit for specific use&amp;nbsp;cases.&lt;/p&gt;
&lt;h3&gt;Issues upgrading Cockpit on Debian and Fedora have been&amp;nbsp;fixed&lt;/h3&gt;
&lt;p&gt;Our packaging changes in recent versions broke upgrading Cockpit on Debian and Fedora.
This is fixed now and updates should work properly once&amp;nbsp;again.&lt;/p&gt;
&lt;h3&gt;On Atomic, sosreport works&amp;nbsp;again&lt;/h3&gt;
&lt;p&gt;A bug that prevented the diagnostic tool sosreport from working on Atomic systems was fixed.
Generating and accessing these diagnostic reports can be very helpful when diagnosing or
reporting an issue on the&amp;nbsp;system.&lt;/p&gt;
&lt;h3&gt;Optionally disable the dependency on&amp;nbsp;libssh&lt;/h3&gt;
&lt;p&gt;When configuring Cockpit, the option &lt;code&gt;disable-ssh&lt;/code&gt; disables building &lt;code&gt;cockpit-ssh&lt;/code&gt; and removes the
dependency on &lt;code&gt;libssh&lt;/code&gt;. This is useful when building on an operating system where &lt;code&gt;libssh&lt;/code&gt; is not&amp;nbsp;available.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 129 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/129"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-129-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit 126 and 127</title><link href="http://cockpit-project.org/blog/cockpit-127.html" rel="alternate"></link><published>2017-01-09T09:44:00+00:00</published><updated>2017-01-09T09:44:00+00:00</updated><author><name>Stef Walter</name></author><id>tag:cockpit-project.org,2017-01-09:/blog/cockpit-127.html</id><summary type="html">&lt;p&gt;Cockpit shows container image security scan&amp;nbsp;info.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from version 126 and&amp;nbsp;127.&lt;/p&gt;
&lt;h3&gt;Show security scan information about container&amp;nbsp;images&lt;/h3&gt;
&lt;p&gt;Lars did work to show security scan information about container images. The
displayed scans happen via the
&lt;a href="https://developers.redhat.com/blog/2016/05/02/introducing-atomic-scan-container-vulnerability-detection/"&gt;atomic scan&lt;/a&gt;
tools and the data comes from the &lt;a href="https://www.open-scap.org/"&gt;OpenSCAP&lt;/a&gt; system.
Take a look at the video&amp;nbsp;below.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/zANUkEmfaAk"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Choose whether password is cached and reused on the login&amp;nbsp;screen&lt;/h3&gt;
&lt;p&gt;The typical workflow for peforming privileged tasks on a Linux system is to
log in as a non-root user and then use &lt;a href="https://www.sudo.ws/"&gt;sudo&lt;/a&gt; or
&lt;a href="https://en.wikipedia.org/wiki/Polkit"&gt;Polkit&lt;/a&gt; to escalate&amp;nbsp;privileges.&lt;/p&gt;
&lt;p&gt;Stef did work to make Cockpit&amp;#8217;s privilege escalation reflect this properly.
Cockpit now has an option on the login screen to
&lt;em&gt;Reuse my password for privileged tasks&lt;/em&gt;. Checking this option automatically
performs reuses the login password as necessary to escalate privileges. If
you leave this box unchecked then Cockpit will behave exactly as a normal
user login without special&amp;nbsp;privileges.&lt;/p&gt;
&lt;p&gt;In the future we&amp;#8217;ll have a way to enable this option once logged in, and
retype your password inside of the logged in&amp;nbsp;session.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a video which shows how this&amp;nbsp;works:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/TW6UsPbNkV4"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;The remotectl command can now combine certificate and key&amp;nbsp;files&lt;/h3&gt;
&lt;p&gt;Peter did work to make it easier to use &lt;span class="caps"&gt;TLS&lt;/span&gt; certificate and key files with
Cockpit for port 9090. Normally the server certificate(s) and key need to be
combined into a single file and placed into the &lt;code&gt;/etc/cockpit/ws-certs.d&lt;/code&gt;
directory. The &lt;code&gt;remotectl&lt;/code&gt; command that comes with Cockpit can now be
used to build such a combined&amp;nbsp;file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;remotectl certificate server.pem chain.pem key.pem
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Due to this, when Cockpit is deployed as an Openshift Pod it can use certificates
provided by&amp;nbsp;Openshift.&lt;/p&gt;
&lt;h3&gt;Cockpit respects&amp;nbsp;/etc/shells&lt;/h3&gt;
&lt;p&gt;Martin fixed Cockpit so it only allows the user to log in if the user has a
valid shell listed in &lt;code&gt;/etc/shells&lt;/code&gt;. In addition bugs on Ubuntu and Debian
have been fixed where users were created without valid&amp;nbsp;shells.&lt;/p&gt;
&lt;h3&gt;Allow renaming of active devices in networking&amp;nbsp;interface&lt;/h3&gt;
&lt;p&gt;You can now rename network devices like bonds or bridges while they&amp;#8217;re active.
The change will apply immediately and without any interruption in&amp;nbsp;service.&lt;/p&gt;
&lt;h3&gt;Rename cockpit-shell to&amp;nbsp;cockpit-system&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;cockpit-shell&lt;/code&gt; subpackage has been renamed to &lt;code&gt;cockpit-system&lt;/code&gt; to
better reflect its focus: configuring and troubleshooting the local&amp;nbsp;system.&lt;/p&gt;
&lt;h3&gt;Kerberos authentication now work even if gss-proxy is in&amp;nbsp;use&lt;/h3&gt;
&lt;p&gt;Sometimes Kerberos (or &lt;span class="caps"&gt;GSSAPI&lt;/span&gt;) single-sign-on authentication requires multiple
round trips to the server. Cockpit now supports this properly, and the end result
is that &lt;span class="caps"&gt;SSO&lt;/span&gt; works even when fancy things like
&lt;a href="https://fedorahosted.org/gss-proxy/"&gt;&lt;span class="caps"&gt;GSS&lt;/span&gt;-Proxy&lt;/a&gt; are in&amp;nbsp;use.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 127 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/127"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-127-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit 125</title><link href="http://cockpit-project.org/blog/cockpit-125.html" rel="alternate"></link><published>2016-11-25T09:14:00+00:00</published><updated>2016-11-25T09:14:00+00:00</updated><author><name>Stef Walter</name></author><id>tag:cockpit-project.org,2016-11-25:/blog/cockpit-125.html</id><summary type="html">&lt;p&gt;Cockpit is properly translatable and displays OSTree&amp;nbsp;signatures.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from version 123, 124 and&amp;nbsp;125.&lt;/p&gt;
&lt;h3&gt;Cockpit is now properly&amp;nbsp;translatable&lt;/h3&gt;
&lt;p&gt;Cockpit is now properly translatable. It was a big task to extract
all the translatable strings and make translations work consistently
between the browser and installed tools like the&amp;nbsp;bridge.&lt;/p&gt;
&lt;p&gt;We now start also run the login user session with a proper locale and
&lt;code&gt;LANG&lt;/code&gt; environment&amp;nbsp;variables.&lt;/p&gt;
&lt;p&gt;You can help
&lt;a href="https://fedora.zanata.org/iteration/view/cockpit/master"&gt;translate cockpit in Zanata&lt;/a&gt;
or if you find text in the frontend that isn&amp;#8217;t translatable, then
please do report&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Display Language Dialog" src="http://cockpit-project.org/blog/images/translatable.png"&gt;&lt;/p&gt;
&lt;h3&gt;Display OSTree&amp;nbsp;signatures&lt;/h3&gt;
&lt;p&gt;Peter implement displaying
&lt;a href="http://www.projectatomic.io/docs/os-updates/"&gt;OSTree tree&lt;/a&gt; signatures. You
can tell where a certain update tree came from and who signed&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Display Language Dialog" src="http://cockpit-project.org/blog/images/ostree-signatures.png"&gt;&lt;/p&gt;
&lt;h3&gt;New expandable views for storage&amp;nbsp;partitions&lt;/h3&gt;
&lt;p&gt;Marius implemented expandable views in the &lt;em&gt;Storage&lt;/em&gt; pages. These let
you dive into the details of a particular partition without having
to navigate away from the page describing where it&amp;nbsp;lives.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Expandable Logical Volumes" src="http://cockpit-project.org/blog/images/storage-listing.png"&gt;&lt;/p&gt;
&lt;h3&gt;Other storage&amp;nbsp;fixes&lt;/h3&gt;
&lt;p&gt;Marius did work to fix many other storage related bugs. In particular
Cockpit now deals properly with passphrases stored for &lt;span class="caps"&gt;LUKS&lt;/span&gt; encrypted
devices, and also no longer offers to format read-only block&amp;nbsp;devices.&lt;/p&gt;
&lt;h3&gt;Full testing on &lt;span class="caps"&gt;RHEL&lt;/span&gt; 7.3, Ubuntu 16.04 and Debian 8&amp;nbsp;Jessie&lt;/h3&gt;
&lt;p&gt;The Cockpit project started testing on Cockpit on &lt;span class="caps"&gt;RHEL&lt;/span&gt; 7.3, Ubuntu 16.04
and Debian 8 Jessie along with the operating systems we tested with earlier.
These will be part of our usual continuous integration, where we boot
thousands or tens of thousands of instances per day to test code changes
and&amp;nbsp;contributions.&lt;/p&gt;
&lt;p&gt;Marius fixed many bugs we found, and filed operating system bugs in
the issue trackers for those operating&amp;nbsp;systems.&lt;/p&gt;
&lt;p&gt;You can see the &lt;a href="http://cockpit-project.org/running.html"&gt;which operating systems&lt;/a&gt;
we test Cockpit on. There&amp;#8217;s no Debian Jessie repository yet, but hopefully
we can have that ready as time&amp;nbsp;permits.&lt;/p&gt;
&lt;h3&gt;System shutdown can be scheduled by&amp;nbsp;date&lt;/h3&gt;
&lt;p&gt;Fridolin did work a long time ago, so that users could select a specific
date and time to schedule a shutdown or reboot of the system. Stef
finished that work added tests and it&amp;#8217;s now in&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Expandable Logical Volumes" src="http://cockpit-project.org/blog/images/shutdown-date.png"&gt;&lt;/p&gt;
&lt;h3&gt;Properly terminate user sessions on the Accounts&amp;nbsp;page&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;Accounts&lt;/em&gt; page now properly terminates user sessions when the
&lt;em&gt;Terminate Session&lt;/em&gt; button is clicked. We use the correct systemd
&lt;a href="https://www.freedesktop.org/software/systemd/man/loginctl.html"&gt;loginctl&lt;/a&gt;&amp;nbsp;commands.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 125 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/125"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-125-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit 122</title><link href="http://cockpit-project.org/blog/cockpit-122.html" rel="alternate"></link><published>2016-11-03T20:31:00+00:00</published><updated>2016-11-03T20:31:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-11-03:/blog/cockpit-122.html</id><summary type="html">&lt;p&gt;About bastion hosts and other highlights from version&amp;nbsp;122&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from version&amp;nbsp;122&lt;/p&gt;
&lt;h3&gt;Logging into a system via a Bastion&amp;nbsp;Host&lt;/h3&gt;
&lt;p&gt;On the Cockpit login screen you can now choose an alternate host to connect
to. Cockpit with use &lt;span class="caps"&gt;SSH&lt;/span&gt; to authenticate you against that host, and display
the admin interface for that&amp;nbsp;host.&lt;/p&gt;
&lt;p&gt;Although browsers cannot use &lt;span class="caps"&gt;SSH&lt;/span&gt; directly to connect to machines or
authenticate against them, Cockpit can make this happen. Only one host
needs to have Cockpit listen on port 9090 available to browsers over &lt;span class="caps"&gt;TLS&lt;/span&gt;,
and other hosts can only have &lt;span class="caps"&gt;SSH&lt;/span&gt; accessible on the usual port&amp;nbsp;22.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s an&amp;nbsp;example:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/yc64DUydciI" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Works with UDisks in addition to&amp;nbsp;storaged&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/storaged-project/storaged"&gt;storaged&lt;/a&gt;
is an actively maintained &lt;span class="caps"&gt;API&lt;/span&gt; for configuring storage on a Linux system.
It is a fork of the older
&lt;a href="https://www.freedesktop.org/wiki/Software/udisks/"&gt;UDisks&lt;/a&gt;. storaged
has additional functionality, like &lt;span class="caps"&gt;LVM&lt;/span&gt;, iSCSI and Btrfs and a large number
of stability&amp;nbsp;fixes.&lt;/p&gt;
&lt;p&gt;However some systems like older &lt;span class="caps"&gt;RHEL&lt;/span&gt; or Ubuntu don&amp;#8217;t yet have storaged.
Cockpit can now also use the older UDisks to configure storage on a system.
A large number of features are disabled, but basic functionality is&amp;nbsp;present.&lt;/p&gt;
&lt;h3&gt;Explicitly specify javascript dependency&amp;nbsp;versions&lt;/h3&gt;
&lt;p&gt;Cockpit&amp;#8217;s bundles various javascript dependencies in its admin interfaces,
such as
&lt;a href="http://www.patternfly.org"&gt;Patternfly&lt;/a&gt; or
&lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt;. In order to help packagers
we&amp;#8217;ve now explictly specified the versions of those dependencies. And
during development we pull them in using the standard
&lt;a href="https://bower.io/"&gt;Bower&lt;/a&gt;&amp;nbsp;registry.&lt;/p&gt;
&lt;p&gt;You can see &lt;a href="https://raw.githubusercontent.com/cockpit-project/cockpit/master/bower.json"&gt;those versions here&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Lars has worked on functionality to show the OpenSCAP security scan results
for containers. This uses the usual &lt;code&gt;atomic scan&lt;/code&gt; functionality that
you see on Atomic&amp;nbsp;Host.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Virtual Machines" src="images/image-scanning.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 122 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/122"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-122-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 121</title><link href="http://cockpit-project.org/blog/cockpit-121.html" rel="alternate"></link><published>2016-10-28T18:06:00+00:00</published><updated>2016-10-28T18:06:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-10-28:/blog/cockpit-121.html</id><summary type="html">&lt;p&gt;Cockpit releases regularly. Network Checkpoints and other highlights from version&amp;nbsp;121&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from version&amp;nbsp;121&lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll notice that we&amp;#8217;ve dropped the &lt;code&gt;0.x&lt;/code&gt; from the beginning of the
version numbers. This underscores the fact that Cockpit is stable. We&amp;#8217;ve been
regularly releasing functionally stable releases for most of the last&amp;nbsp;year.&lt;/p&gt;
&lt;h3&gt;Network Configuration&amp;nbsp;Rollback&lt;/h3&gt;
&lt;p&gt;NetworkManager now has support in its &lt;span class="caps"&gt;API&lt;/span&gt; for detecting whether a network
configuration change broke connectivity to the system. Marius did work
so that Cockpit can detect this and have NetworkManager rollback the
changes that would have caused a remote admin to be disconnected from
the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;This is similar to how a Linux desktop asks you to click in a dialog
if you accept the new display configuration. Except in the networking
case we can test the connectivity&amp;nbsp;automatically.&lt;/p&gt;
&lt;p&gt;Check it&amp;nbsp;out:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/fNIaDl5UR4Q?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Debian&amp;nbsp;Branding&lt;/h3&gt;
&lt;p&gt;Cockpit now shows proper branding when running on Debian, and uses the
logo installed on the system on its login&amp;nbsp;screen.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Virtual Machines" src="images/debian-branding.png"&gt;&lt;/p&gt;
&lt;h3&gt;Fix Kerberos single sign on Debian and&amp;nbsp;Ubuntu&lt;/h3&gt;
&lt;p&gt;Stef fixed Kerberos single sign on Debian and Ubuntu. More changes are
coming in the next release including support for use with
&lt;a href="https://fedoraproject.org/wiki/Features/gss-proxy"&gt;gssproxy&lt;/a&gt; and expanding
support for non-Kerberos &lt;span class="caps"&gt;GSSAPI&lt;/span&gt; authentication&amp;nbsp;mechanisms.&lt;/p&gt;
&lt;h3&gt;Debugging info for Javascript and &lt;span class="caps"&gt;CSS&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Cockpit now ships proper Javascript and &lt;span class="caps"&gt;CSS&lt;/span&gt; debugging &amp;#8220;map&amp;#8221; files in its
cockpit-debuginfo packages. These make it easier to troubleshoot issues
and develop code that runs in&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Peter is adding support for specifying an alternate server to connect
to on the login&amp;nbsp;screen.&lt;/p&gt;
&lt;p&gt;This completes the story of the &amp;#8220;bastion host&amp;#8221; which is accessible via
a web browser, in effect letting you connect via the Web Browser from
the login screen to other machines which only have &lt;span class="caps"&gt;SSH&lt;/span&gt; access available.
When using a bastion setup like this you only need a single trusted
&lt;span class="caps"&gt;TLS&lt;/span&gt; certificate and the remaining trust is ensured by &lt;span class="caps"&gt;SSH&lt;/span&gt; known host&amp;nbsp;keys.&lt;/p&gt;
&lt;p&gt;This feature will be used to implement click-through access to configure a host
in projects such as ManageIQ or &lt;span class="caps"&gt;RHEV&lt;/span&gt;.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 121 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/121"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-121-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 120</title><link href="http://cockpit-project.org/blog/cockpit-120.html" rel="alternate"></link><published>2016-10-21T13:22:00+00:00</published><updated>2016-10-21T13:22:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-10-21:/blog/cockpit-120.html</id><summary type="html">&lt;p&gt;Cockpit releases regularly. Here&amp;#8217;s highlights from 119 and&amp;nbsp;120&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. We release
regularly. Here are the release notes from versions 119 and&amp;nbsp;120.&lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll notice that we&amp;#8217;ve dropped the &lt;code&gt;0.x&lt;/code&gt; from the beginning of the
version numbers. This underscores the fact that Cockpit is stable. We&amp;#8217;ve been
regularly releasing functionally stable releases for most of the last&amp;nbsp;year.&lt;/p&gt;
&lt;h3&gt;Expandable and Filterable Containers and&amp;nbsp;Images&lt;/h3&gt;
&lt;p&gt;Lars reworked the Containers section of Cockpit. The various images and
containers are not expandable inline, and it&amp;#8217;s also easy to find a specific
image and container by using the filter bar to search for&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Take a&amp;nbsp;look:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/-huY6q7kcmU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;&lt;span class="caps"&gt;VM&lt;/span&gt; Configuration and&amp;nbsp;Monitoring&lt;/h3&gt;
&lt;p&gt;Marek worked on a new interface in Cockpit for configuring and monitoring
virtual machines running on the current system. This has the ability to
grow into something like the desktop &lt;code&gt;virt-manager&lt;/code&gt; tool.&lt;/p&gt;
&lt;p&gt;It looks something like&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Virtual Machines" src="images/vms.png"&gt;&lt;/p&gt;
&lt;h3&gt;Unmanaged Network&amp;nbsp;Devices&lt;/h3&gt;
&lt;p&gt;Cockpit now shows unmanaged network devices in its listing. You can&amp;#8217;t configure
them or do much with them, but their presence is acknowledged. This should make
troubleshooting non-standard configurations&amp;nbsp;easier.&lt;/p&gt;
&lt;h3&gt;Sidebar for Physical Volumes in a Volume&amp;nbsp;Group&lt;/h3&gt;
&lt;p&gt;Marius added a sidebar that shows up on &lt;span class="caps"&gt;LVM&lt;/span&gt; groups or volumes, that shows
which physical devices are&amp;nbsp;involved.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s an&amp;nbsp;example:&lt;/p&gt;
&lt;p&gt;&lt;img alt="SSH subprocesses" src="images/cockpit-pv-sidebar.png"&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt; connections are run in a separate&amp;nbsp;process&lt;/h3&gt;
&lt;p&gt;When Cockpit connects to an additional server it uses &lt;span class="caps"&gt;SSH&lt;/span&gt;, much like
Ansible or other tools. We now launch a separate &lt;code&gt;cockpit-ssh&lt;/code&gt; process
for each outgoing connection to another&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;This lets us isolate the involved code much better, providing security
benefits. But it also makes it possible to insert additional logic when
embedding Cockpit. It&amp;#8217;s possible to put in shims to lookup keys, single-sign-on
tokens or keytabs, and so&amp;nbsp;on.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SSH subprocesses" src="images/cockpit-ssh.png"&gt;&lt;/p&gt;
&lt;h3&gt;Only connect to remote machines already known to&amp;nbsp;Cockpit&lt;/h3&gt;
&lt;p&gt;When connecting to additional machines via &lt;span class="caps"&gt;SSH&lt;/span&gt;, Cockpit now refuses to
connect to machines it doesn&amp;#8217;t have a host key for. This tightens up
security and prevents certain reflection&amp;nbsp;attacks.&lt;/p&gt;
&lt;h3&gt;Fix bugs preventing Logs page from working in Firefox&amp;nbsp;49&lt;/h3&gt;
&lt;p&gt;The Logs section of Cockpit failed to function on Firefox 49. This
version includes a fix for&amp;nbsp;that.&lt;/p&gt;
&lt;h3&gt;Add tooltip describing group name in Roles&amp;nbsp;list&lt;/h3&gt;
&lt;p&gt;When configuring local user accounts, one can assign various roles such
as &amp;#8216;Server Administrator&amp;#8217; to the account. Cockpit now displays the Unix
user group that is involved in the&amp;nbsp;role.&lt;/p&gt;
&lt;p&gt;&lt;img alt="User Unix Group" src="images/cockpit-unix-group.png"&gt;&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Marius added support for NetworkManager checkpoints. This means that
while configuring network interfaces, if a change would cause Cockpit
to disconnect, then Cockpit can revert the change and retain connectivity
to the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;This is similar to how a Linux Desktop asks you to click in a dialog
if you accept the new screen configuration. Except in the networking
case we can test the connectivity&amp;nbsp;automatically.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 120 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/120"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-120-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 118</title><link href="http://cockpit-project.org/blog/cockpit-118.html" rel="alternate"></link><published>2016-09-08T14:50:00+00:00</published><updated>2016-09-08T14:50:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-09-08:/blog/cockpit-118.html</id><summary type="html">&lt;p&gt;Cockpit releases regularly. Here&amp;#8217;s highlights from&amp;nbsp;118&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s usually
a release every week, but this time around we were delinquent and it&amp;#8217;s been nearly a&amp;nbsp;month.&lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll notice that we&amp;#8217;ve dropped the &lt;code&gt;0.x&lt;/code&gt; from the beginning of the
version numbers. This underscores the fact that Cockpit is stable. We&amp;#8217;ve been
regularly releasing functionally stable releases for most of the last&amp;nbsp;year.&lt;/p&gt;
&lt;p&gt;And over the last few months we&amp;#8217;ve worked hard on identifying stable javascript
APIs and protocols for various Cockpit components to consume. We&amp;#8217;ll be itemizing
these stability guarantees in the documentation&amp;nbsp;shortly.&lt;/p&gt;
&lt;h3&gt;Timer jobs in&amp;nbsp;systemd&lt;/h3&gt;
&lt;p&gt;Harish did great work during Google Summer of Code to add support for
&lt;a href="https://www.freedesktop.org/software/systemd/man/systemd.timer.html"&gt;systemd timers&lt;/a&gt;.
Timers let users schedule tasks similar to cron jobs. Timers are now listed,
and dialogs for defining jobs and their recurring patterns are now included
in&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;p&gt;Harish &lt;a href="https://medium.com/@harishanand95/gsoc-creating-timers-in-cockpit-f4034c79df51#.wdq8gtdxc"&gt;detailed his work in a blog post&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Timers" src="images/cockpit-timers.png"&gt;&lt;/p&gt;
&lt;h3&gt;Two factor auth on login&amp;nbsp;screen&lt;/h3&gt;
&lt;p&gt;Peter pulled off a major change to have full &lt;span class="caps"&gt;PAM&lt;/span&gt; conversations supported
on the Cockpit login screen. This means you can use two factor
authentication dongles or Yubikeys in your login workflow in&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;p&gt;In addition, for the next release Stef worked on allowing the user to
change expired passwords while logging in, similar to how they would
on the&amp;nbsp;console.&lt;/p&gt;
&lt;p&gt;Take a&amp;nbsp;look:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/gXsOt6zgBs4?rel=0"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Use Webpack to build the Cockpit&amp;nbsp;interface&lt;/h3&gt;
&lt;p&gt;Most of Cockpit is written in javascript and runs in the browser. This
code is now built with &lt;a href="https://webpack.github.io/"&gt;Webpack&lt;/a&gt;. It&amp;#8217;s bundled
into single page application bundles per Cockpit component. Among
other things, this makes hacking on Cockpit much&amp;nbsp;easier.&lt;/p&gt;
&lt;p&gt;The &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/HACKING.md"&gt;documentation has been updated&lt;/a&gt;
to show what you need to do to make a change to Cockpit either with
Vagrant or on your local&amp;nbsp;machine.&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt; key loading and Docker resources work on&amp;nbsp;Debian&lt;/h3&gt;
&lt;p&gt;The container resource usage graphs and resource limit dialogs now
work properly on Debian. Stef adapted the code to account for the different
CGroup layout than Docker uses on&amp;nbsp;Debian.&lt;/p&gt;
&lt;p&gt;In addition the &lt;span class="caps"&gt;SSH&lt;/span&gt; key listing code now works on&amp;nbsp;Debian.&lt;/p&gt;
&lt;h3&gt;Configure Cockpit URLs with an &lt;span class="caps"&gt;HTTP&lt;/span&gt;&amp;nbsp;prefix&lt;/h3&gt;
&lt;p&gt;The &lt;span class="caps"&gt;HTTP&lt;/span&gt; URLs that Cockpit uses can now have a (mostly) arbitrary prefix
in their path. This is useful in scenarios where Cockpit is proxied by
another application or management console. Use the &lt;code&gt;UrlRoot&lt;/code&gt; option
&lt;a href="http://cockpit-project.org/guide/latest/cockpit.conf.5.html"&gt;in cockpit.conf&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Components can require a minimum Cockpit&amp;nbsp;version&lt;/h3&gt;
&lt;p&gt;Cockpit is built from various components that are independently installable
and composable. Various components provide network configuration, or storage,
or container&amp;nbsp;functionality.&lt;/p&gt;
&lt;p&gt;These components can now indicate which part of the base javascript and base
&lt;code&gt;cockpit-bridge&lt;/code&gt; they require in order to function. This is
&lt;a href="http://cockpit-project.org/guide/latest/packages.html#package-manifest"&gt;configured in the package manifest&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Incompatible Cockpit" src="images/cockpit-incompatible.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 118 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/118"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-118-1.fc25"&gt;Fedora&amp;nbsp;25&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 24, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.117</title><link href="http://cockpit-project.org/blog/cockpit-0.117.html" rel="alternate"></link><published>2016-08-11T12:36:00+00:00</published><updated>2016-08-11T12:36:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-08-11:/blog/cockpit-0.117.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from 0.115, 0.116 and&amp;nbsp;0.117.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release almost every week. Here are the highlights from this the 0.115, 0.116 and 0.117&amp;nbsp;releases.&lt;/p&gt;
&lt;h3&gt;Configure volumes and environment for a Docker&amp;nbsp;container&lt;/h3&gt;
&lt;p&gt;Vanlos Wang implemented support for configuring volumes and environment
variables when running a container in the Cockpit &lt;span class="caps"&gt;UI&lt;/span&gt;. This allows you
see what environment variables and volumes an image is pre-configured
to have. It then allows the user to define additional environment variables
and volumes for the new container, and then commit those changes to a
new image if&amp;nbsp;desired.&lt;/p&gt;
&lt;p&gt;Take a&amp;nbsp;look:&lt;/p&gt;
&lt;iframe width="1280" height="720" src="https://www.youtube.com/embed/l9E78Uevg00"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Setup container and image&amp;nbsp;storage&lt;/h3&gt;
&lt;p&gt;Marius worked with Dan Walsh and and others to implement a &lt;span class="caps"&gt;UI&lt;/span&gt; for configuring
the Docker container and image storage pool. It&amp;#8217;s now easy to add additional
disks or storage to that pool, or reset it to a clean&amp;nbsp;state.&lt;/p&gt;
&lt;p&gt;On some operating systems like &lt;a href="http://www.projectatomic.io/download/"&gt;Atomic Host&lt;/a&gt;,
this storage pool is present by default,
and elsewhere this container storage pool can be set&amp;nbsp;up.&lt;/p&gt;
&lt;p&gt;Relatedly on the command line, checkout the new
&lt;a href="https://raw.githubusercontent.com/projectatomic/atomic/master/docs/atomic-storage.1.md"&gt;&lt;code&gt;atomic storage&lt;/code&gt;&lt;/a&gt;
sub-command which does the same configuration tasks, that previously had to be configured
with arcane configuration&amp;nbsp;files.&lt;/p&gt;
&lt;iframe width="1280" height="720" src="https://www.youtube.com/embed/l9fmMa5WJMk?rel=0"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Support for Network&amp;nbsp;Teaming&lt;/h3&gt;
&lt;p&gt;Marius also added support for
&lt;a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/ch-Configure_Network_Teaming.html"&gt;configuring network teaming&lt;/a&gt;
to Cockpit. Network teams are
similar to network bonds, in that they combine two network interfaces into
one, and involve failover or load balancing modes. But teams have more robust
terminology and&amp;nbsp;implementation.&lt;/p&gt;
&lt;p&gt;Since teams are a server side feature, this will replace the functionality for
defining teams in Linux Desktop control center&amp;nbsp;applications.&lt;/p&gt;
&lt;p&gt;Support for configuring bonds in Cockpit will remain for the time being until
the team support can be relied upon to completely replace that functionality.
Both NetworkManager and Cockpit are involved in&amp;nbsp;this.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a video demoing the&amp;nbsp;changes:&lt;/p&gt;
&lt;iframe width="960" height="720" src="https://www.youtube.com/embed/-sob1W33Xus?rel=0"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Pulling images without authentication from the Openshift&amp;nbsp;Registry&lt;/h3&gt;
&lt;p&gt;The Openshift image registry now supports pulling images without first
logging in. It can be configured to allow this on a per-project basis.
This allows images to be shared from the registry with a broader audience
of developers or image consumers, such as&amp;nbsp;scripts.&lt;/p&gt;
&lt;p&gt;Aaron Weitekamp worked on adding support the Registry console to
configure projects to allow pulling images without authentication.
Here&amp;#8217;s a video of those&amp;nbsp;changes:&lt;/p&gt;
&lt;iframe width="1280" height="720" src="https://www.youtube.com/embed/fpsvtq5hENk" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Don&amp;#8217;t allow formatting extended&amp;nbsp;partitions&lt;/h3&gt;
&lt;p&gt;Cockpit no longer erroneously allows formatting certain partitions, such as
extended partitions containing other logical&amp;nbsp;partitions.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.117 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.117"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.117-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.114</title><link href="http://cockpit-project.org/blog/cockpit-0.114.html" rel="alternate"></link><published>2016-07-12T13:51:00+00:00</published><updated>2016-07-12T13:51:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-07-12:/blog/cockpit-0.114.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.114.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.114&amp;nbsp;release.&lt;/p&gt;
&lt;h3&gt;Test every change on&amp;nbsp;CentOS&lt;/h3&gt;
&lt;p&gt;Cockpit runs all its tests suites against code before that code is merged, much less
becomes part of a release. This isn&amp;#8217;t just unit tests, but integration booting of
&lt;span class="caps"&gt;RHEL&lt;/span&gt;, Debian, Fedora and Atomic&amp;nbsp;machines.&lt;/p&gt;
&lt;p&gt;We now added CentOS to that list. We now boot CentOS 7.x instances many hundreds of times
a day to test aspects of the system, and how Cockpit and a given pull request interact with&amp;nbsp;it.&lt;/p&gt;
&lt;h3&gt;Show &lt;span class="caps"&gt;SSH&lt;/span&gt; host keys and machine &lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The main system info page now shows the
&lt;a href="https://www.freedesktop.org/software/systemd/man/machine-id.html"&gt;local machine &lt;span class="caps"&gt;ID&lt;/span&gt;&lt;/a&gt; for
easy&amp;nbsp;access.&lt;/p&gt;
&lt;p&gt;You can also see the fingerprints of all the &lt;a href="https://en.wikipedia.org/wiki/Secure_Shell"&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt; host keys&lt;/a&gt;.
These are the fingerprints that you would be expected to recognize and/or add to the
&lt;code&gt;known_hosts&lt;/code&gt; file when accessing the machine over &lt;span class="caps"&gt;SSH&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SSH host keys" src="images/cockpit-ssh-host-keys.png"&gt;&lt;/p&gt;
&lt;h3&gt;Allow changing the ethernet &lt;span class="caps"&gt;MTU&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;You can now change the ethernet
&lt;a href="https://en.wikipedia.org/wiki/Maximum_transmission_unit"&gt;maximum transmission unit&lt;/a&gt; in the
network&amp;nbsp;configuration.&lt;/p&gt;
&lt;h3&gt;Show intelligent password error&amp;nbsp;messages&lt;/h3&gt;
&lt;p&gt;When choosing a password Cockpit validates the password using the &lt;code&gt;pwscore&lt;/code&gt; tool.
Appropriate and descriptive error messages are now shown when the validation&amp;nbsp;fails:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pwscore message" src="images/cockpit-pwscore-message.png"&gt;&lt;/p&gt;
&lt;h3&gt;Red Hat subscription registration&amp;nbsp;options&lt;/h3&gt;
&lt;p&gt;The Red Hat subscriptions functionality has been enhanced. You can now specify an activation
key when registering the system. This key is generated in your organization in such a
way that it uniquely identifies whan kind of software should be available on the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;You can now also specify an organization when registering the&amp;nbsp;system.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;Future&lt;/h3&gt;
&lt;p&gt;Marek &lt;a href="https://github.com/cockpit-project/cockpit/pull/4434"&gt;is working on&lt;/a&gt; a new part of
the admin interface to list the virtual machines running on the current system. This is
the beginnings of a web accessible &lt;a href="https://virt-manager.org/"&gt;virt-manager&lt;/a&gt;&amp;nbsp;tool:&lt;/p&gt;
&lt;p&gt;&lt;img alt="pwscore message" src="images/cockpit-libvirt-message.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.114 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.114"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.114-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.113</title><link href="http://cockpit-project.org/blog/cockpit-0.113.html" rel="alternate"></link><published>2016-07-07T17:30:00+00:00</published><updated>2016-07-07T17:30:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-07-07:/blog/cockpit-0.113.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from 0.112 and&amp;nbsp;0.113.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.111 and 0.112&amp;nbsp;releases.&lt;/p&gt;
&lt;h3&gt;Display time information for systemd timer&amp;nbsp;jobs&lt;/h3&gt;
&lt;p&gt;Harish Anand a Google Summer of Code student working on Cockpit, and he&amp;#8217;s implementing
systemd timers. These are similar to cron jobs, and are a structured way of running
a command or other systemd unit at a specific time. Some of his initial work got merged,
and you can see it in action&amp;nbsp;here:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/2mGAlpZWQUQ?rel=0"
frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Hide Unmanaged Network&amp;nbsp;Interfaces&lt;/h3&gt;
&lt;p&gt;NetworkManager has the concept of marking certain network interfaces as &amp;#8220;unmanaged&amp;#8221;.
This is done with a &lt;code&gt;NM_CONTROLLED="no"&lt;/code&gt; setting in a file placed in
&lt;code&gt;/etc/sysconfig/network-scripts/&lt;/code&gt;. Cockpit now respects the admins wishes and
and hides such interfaces from its Network&amp;nbsp;configuration.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;On/Off&lt;/em&gt; switch is also disabled appropriately for unknown&amp;nbsp;interfaces.&lt;/p&gt;
&lt;h3&gt;Network bonds are created with&amp;nbsp;Active/Backup&lt;/h3&gt;
&lt;p&gt;When a new network bond is created the &lt;em&gt;Active/Backup&lt;/em&gt; mode is used as
the default. This is a more common choice for admins, and makes sense
to point people in this&amp;nbsp;direction.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Bond Active/Backup" src="images/cockpit-active-backup.png"&gt;&lt;/p&gt;
&lt;h3&gt;Added textual fields to container resource&amp;nbsp;sliders&lt;/h3&gt;
&lt;p&gt;Users can now type actual amounts in memory megabytes, or &lt;span class="caps"&gt;CPU&lt;/span&gt; shares
when starting a container, in addition to being able to use a&amp;nbsp;slider.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Resource Slider Text" src="images/cockpit-resource-sliders-text.png"&gt;&lt;/p&gt;
&lt;h3&gt;Disable tuned correctly when disabling performance&amp;nbsp;profiles&lt;/h3&gt;
&lt;p&gt;The tuned service needs to be stopped and disabled when choosing the &amp;#8220;none&amp;#8221;
performance profile. The behavior now lines up with what users expect
using the &lt;code&gt;tuned-adm&lt;/code&gt; command line&amp;nbsp;tooling.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;Future&lt;/h3&gt;
&lt;p&gt;Lars &lt;a href="https://github.com/cockpit-project/cockpit/pull/4633"&gt;is working on&lt;/a&gt; making the
terminal be resizable, so you&amp;#8217;re not limited to a small display when working on
the&amp;nbsp;machine.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.113 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.113"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.113-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.111</title><link href="http://cockpit-project.org/blog/cockpit-0.111.html" rel="alternate"></link><published>2016-06-26T09:00:00+00:00</published><updated>2016-06-26T09:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-06-26:/blog/cockpit-0.111.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from 0.107 through&amp;nbsp;0.111.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week, although it&amp;#8217;s been a while since the release notes were posted. Here are the highlights from this weeks 0.107 through 0.111&amp;nbsp;releases.&lt;/p&gt;
&lt;h3&gt;SELinux enforcing&amp;nbsp;policy&lt;/h3&gt;
&lt;p&gt;You can now temporarily disable SELinux enforcing mode from the SELinux troubleshooting
dashboard. This is useful when diagnosing permission issues that you might think are
SELinux&amp;nbsp;related.&lt;/p&gt;
&lt;p&gt;&lt;img alt="SELinux Enforcing" src="images/cockpit-selinux-enforcing.png"&gt;&lt;/p&gt;
&lt;h3&gt;Stable Javascript &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Cockpit now has a &lt;a href="http://cockpit-project.org/guide/latest/api-base1.html"&gt;stable Javascript &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;
for components or plugins to build off of. Various unstable portions were removed from the
base1 package in preparation for this. There&amp;#8217;s more work going on to help make it easy to build
out of tree components or&amp;nbsp;plugins.&lt;/p&gt;
&lt;h3&gt;GlusterFS in Kubernetes&amp;nbsp;Dashboard&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; dashboard now lists &lt;a href="http://gluster.org/"&gt;Gluster&lt;/a&gt;
volumes in the dashboard, lets you configure them for pods to&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;&lt;img alt="GlusterFS Persistent Volumes" src="images/cockpit-glusterfs-volume.png"&gt;&lt;/p&gt;
&lt;h3&gt;Kubernetes pending Persistent Volume&amp;nbsp;Claims&lt;/h3&gt;
&lt;p&gt;The &lt;a href="http://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; dashboard lists pods which have
outstanding volume claims, and then allows you to fulfill those claims
by creating appropriate persistent&amp;nbsp;volumes.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Persistent Volume Claims" src="images/cockpit-dashboard-claim.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Persistent Volume Claims" src="images/cockpit-volume-claims.png"&gt;&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;Future&lt;/h3&gt;
&lt;p&gt;Marius &lt;a href="https://github.com/cockpit-project/cockpit/pull/4571"&gt;has worked on&lt;/a&gt; adding support
for Linux &lt;a href="http://libteam.org/"&gt;network teaming&lt;/a&gt; to the Cockpit admin interface. Teaming
is a better more coherent way of building a network&amp;nbsp;bond.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.111 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.111"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.111-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.106</title><link href="http://cockpit-project.org/blog/cockpit-0.106.html" rel="alternate"></link><published>2016-05-12T15:40:00+00:00</published><updated>2016-05-12T15:40:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-05-12:/blog/cockpit-0.106.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.106&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.106&amp;nbsp;release.&lt;/p&gt;
&lt;h3&gt;Stable Cockpit&amp;nbsp;Styles&lt;/h3&gt;
&lt;p&gt;One of the annoying things about &lt;span class="caps"&gt;CSS&lt;/span&gt; is that when you bring in stylesheets from
multiple projects, they can conflict. You have to choose a nomen-clature to
namespace your &lt;span class="caps"&gt;CSS&lt;/span&gt;, or nest it&amp;nbsp;appropriately.&lt;/p&gt;
&lt;p&gt;We&amp;#8217;re stabilizing the internals of Cockpit in the browser, so when folks write
plugins, they can count on them working. To make that happen we had to namespace
all our own Cockpit specific &lt;span class="caps"&gt;CSS&lt;/span&gt; classes. Most of the styling used in Cockpit
come from &lt;a href="https://www.patternfly.org/"&gt;Patternfly&lt;/a&gt; and this change doesn&amp;#8217;t affect
those styles at&amp;nbsp;all.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cockpit-project/cockpit/wiki/Cockpit-CSS-Styling"&gt;Documentation is on the&amp;nbsp;wiki&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Container Image&amp;nbsp;Layers&lt;/h3&gt;
&lt;p&gt;Docker container image layers are now shown much more clearly. It should be clearer to tell
which is the base layer, and how the others are layered on&amp;nbsp;top:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Image Layers" src="images/cockpit-image-layers.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.106 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.106"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.106-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Cockpit 0.105</title><link href="http://cockpit-project.org/blog/cockpit-0.105.html" rel="alternate"></link><published>2016-05-04T14:27:00+00:00</published><updated>2016-05-04T14:27:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-05-04:/blog/cockpit-0.105.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.105&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.105&amp;nbsp;release.&lt;/p&gt;
&lt;h3&gt;Strict Content-Security-Policy enforced&amp;nbsp;everywhere&lt;/h3&gt;
&lt;p&gt;All of the Cockpit components now ship strict Content-Security-Policy. This is like
SELinux in your browser, where you declare the kind of things the application is
permitted to do and anything else is&amp;nbsp;blocked.&lt;/p&gt;
&lt;p&gt;Cockpit now only allows talking to and loading code from the server(s) that it&amp;#8217;s
running on. Everything else is blocked, including inline scripts, evaluating
javascript code, and using inline&amp;nbsp;styles.&lt;/p&gt;
&lt;h3&gt;Timeout for Cockpit&amp;nbsp;Authentication&lt;/h3&gt;
&lt;p&gt;Cockpit uses &lt;span class="caps"&gt;PAM&lt;/span&gt; for authenticating local users. It now expects that authentication
process to complete within a certain&amp;nbsp;timeout.&lt;/p&gt;
&lt;p&gt;More details &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/doc/authentication.md"&gt;in this document&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Cluster Users can be Added and Removed from&amp;nbsp;Groups&lt;/h3&gt;
&lt;p&gt;In the Cluster admin interface, users can be added to groups and remove
them with a few clicks. Here&amp;#8217;s a short&amp;nbsp;video:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/TzvqNj9VywM"frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Registry Mirroring from Insecure&amp;nbsp;Registries&lt;/h3&gt;
&lt;p&gt;In &lt;a href="http://www.projectatomic.io/registry/"&gt;the Registry user interface&lt;/a&gt; there&amp;#8217;s now a
checkbox that allows you to choose whether the registry from which you&amp;#8217;re mirroring
container images is insecure or&amp;nbsp;not.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Insecure Registry option" src="images/cockpit-insecure-registry.png"&gt;&lt;/p&gt;
&lt;h3&gt;Deletion of Kubernetes&amp;nbsp;Nodes&lt;/h3&gt;
&lt;p&gt;In the Cluster admin interface you can now delete Nodes from the cluster, and select
which ones to delete. Andreas has also done design work to allow upgrading the
node operating system as well as cordoning nodes, which makes them unavailable for
scheduling&amp;nbsp;containers.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Deleting Nodes" src="images/cockpit-delete-nodes.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.105 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.105"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.105-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Cockpit 0.104</title><link href="http://cockpit-project.org/blog/cockpit-0.104.html" rel="alternate"></link><published>2016-04-28T15:21:00+00:00</published><updated>2016-04-28T15:21:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-04-28:/blog/cockpit-0.104.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.104&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.104&amp;nbsp;release.&lt;/p&gt;
&lt;h3&gt;Kubernetes iSCSI&amp;nbsp;Volumes&lt;/h3&gt;
&lt;p&gt;Peter added support for iSCSI Kubernetes Volumes in the Cockpit Cluster dashboard. When you
have container pods that need to store data somewhere, it&amp;#8217;s now real easy to configure use
an iSCSI initiator. Take a&amp;nbsp;look:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/ytNGsIDYNSQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Listing View&amp;nbsp;Expansion&lt;/h3&gt;
&lt;p&gt;Andreas, Dominik, and I worked on a better listing view pattern. In Cockpit we like to give
admins the option to expand data inline, and compare it between multiple entries on the same
page. But after feedback from the &lt;a href="https://www.patternfly.org/"&gt;Patternfly folks&lt;/a&gt; we added an
explicit expander to do&amp;nbsp;this.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/myXr_hnr5Jg" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Tagging Docker Images in the&amp;nbsp;Registry&lt;/h3&gt;
&lt;p&gt;The Atomic Registry and Openshift Registry support mirroring images from another image registry
such as the Docker Hub. When the images are mirrored, they are copied and available in your
own registry. Cockpit now has support for telling the registry which specific tags you&amp;#8217;d like
to mirror. And Aaron is adding support for various mirroring options as&amp;nbsp;well.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/MJzqob5AYI8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;From the&amp;nbsp;Future&lt;/h3&gt;
&lt;p&gt;Marius has a working proof of concept that lets you configure where Docker stores container and image
data on its host. Take a look at the demo below. Marius adds disks to the container storage&amp;nbsp;pool:&lt;/p&gt;
&lt;iframe width="960" height="720" src="https://www.youtube.com/embed/9YiG4AY6HeY?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.104 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.104"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.104-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Cockpit 0.103</title><link href="http://cockpit-project.org/blog/cockpit-0.103.html" rel="alternate"></link><published>2016-04-20T15:45:00+00:00</published><updated>2016-04-20T15:45:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-04-20:/blog/cockpit-0.103.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.102&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.103&amp;nbsp;release.&lt;/p&gt;
&lt;h3&gt;Kubernetes connection&amp;nbsp;configuration&lt;/h3&gt;
&lt;p&gt;When a Kubernetes client wants to access the &lt;span class="caps"&gt;API&lt;/span&gt; of the cluster, it looks for a &amp;#8220;kubeconfig&amp;#8221; file to tell it how to find the cluster and how to authenticate when accessing the &lt;span class="caps"&gt;API&lt;/span&gt;. The usual location for this file is in the current user&amp;#8217;s home directory at the &lt;code&gt;~/.kube/config&lt;/code&gt; file path. If that doesn&amp;#8217;t exist, then usually the cluster isn&amp;#8217;t available. This applies to both clients like the &lt;code&gt;kubectl&lt;/code&gt; command as well as Cockpit&amp;#8217;s cluster&amp;nbsp;dashboard.&lt;/p&gt;
&lt;p&gt;Cockpit can now prompt for this information, and build this file for you. If it doesn&amp;#8217;t exist, then there&amp;#8217;s a helpful &amp;#8220;Troubleshoot&amp;#8221; button to help get this configuration in&amp;nbsp;place.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/WSh7wYhAXrA" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Upload each Release to an Ubuntu &lt;span class="caps"&gt;PPA&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Each weekly release of Cockpit is now uploaded to an Ubuntu &lt;span class="caps"&gt;PPA&lt;/span&gt;. Here&amp;#8217;s how to make use of&amp;nbsp;it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo add-apt-repository ppa:cockpit-project/cockpit
sudo apt-get update
sudo apt-get install cockpit
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Remove jQuery Usage from cockpit.js &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;As part of stabilizing the internals of Cockpit, we removed jQuery usage from the cockpit.js file. &lt;a href="http://cockpit-project.org/guide/latest/api-base1.html"&gt;The javascript &lt;span class="caps"&gt;API&lt;/span&gt; itself&lt;/a&gt; hasn&amp;#8217;t changed, but this change helps to help keep a stable &lt;span class="caps"&gt;API&lt;/span&gt; in the&amp;nbsp;future.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.103 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.103"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.103-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Cockpit with Docker Restart Policy</title><link href="http://cockpit-project.org/blog/cockpit-0.102.html" rel="alternate"></link><published>2016-04-14T13:33:00+00:00</published><updated>2016-04-14T13:33:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-04-14:/blog/cockpit-0.102.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.102&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.102&amp;nbsp;release.&lt;/p&gt;
&lt;h3&gt;Docker Restart&amp;nbsp;Policy&lt;/h3&gt;
&lt;p&gt;When running a Docker container in Cockpit, you can now set the restart policy, so when the docker daemon restarts the containers will be restarted too. Justin Robertson contributed this feature. Take a&amp;nbsp;look.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/8YYHui-FQco?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Single Dialog for Creating Logical&amp;nbsp;Volumes&lt;/h3&gt;
&lt;p&gt;The storage interface in Cockpit now has a single combined dialog when creating logical volumes.
This is a first tiny step towards advanced &lt;span class="caps"&gt;LVM2&lt;/span&gt; features such as &lt;span class="caps"&gt;RAID&lt;/span&gt; layouts and caches. The dialog will get more fields and more interesting behavior as we implement more of the features offered by &lt;span class="caps"&gt;LVM2&lt;/span&gt;, such as the various &lt;span class="caps"&gt;RAID&lt;/span&gt; levels, as indicated by the hidden options for the &amp;#8220;Purpose&amp;#8221; and &amp;#8220;Layout&amp;#8221;&amp;nbsp;fields.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Single dialog for logical volumes" src="images/cockpit-logical-volume-one-dialog.png"&gt;&lt;/p&gt;
&lt;h3&gt;Storage interface now available on&amp;nbsp;Debian&lt;/h3&gt;
&lt;p&gt;The storage interface in Cockpit has been enabled and built on Debian. The
&lt;a href="https://github.com/storaged-project/storaged/"&gt;storaged &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; is now available on Debian&amp;nbsp;too.&lt;/p&gt;
&lt;h3&gt;Don&amp;#8217;t Distribute jshint due to&amp;nbsp;License&lt;/h3&gt;
&lt;p&gt;We stopped distributing &lt;a href="http://jshint.com/"&gt;jshint&lt;/a&gt; or requiring it as a build dependency due
to its &lt;a href="https://github.com/jshint/jshint/issues/1234"&gt;controversial license&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.102 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.102"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.102-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Cockpit does Kubernetes Data Volumes</title><link href="http://cockpit-project.org/blog/cockpit-0.101.html" rel="alternate"></link><published>2016-04-08T12:35:00+00:00</published><updated>2016-04-08T12:35:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-04-08:/blog/cockpit-0.101.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.101&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.101&amp;nbsp;release.&lt;/p&gt;
&lt;h3&gt;Kubernetes&amp;nbsp;Volumes&lt;/h3&gt;
&lt;p&gt;You can now set up Kubernetes &lt;a href="http://kubernetes.io/docs/user-guide/persistent-volumes/"&gt;persistent volume claims&lt;/a&gt; through the Cockpit cluster admin interface. These volumes are used to store persistent container data and possibly share them between containers. Each container pod declares the volumes it needs, and when deploying such an application admins configure the locations to store the data in those&amp;nbsp;volumes.&lt;/p&gt;
&lt;p&gt;Take a&amp;nbsp;look:&lt;/p&gt;
&lt;iframe width="960" height="720" src="https://www.youtube.com/embed/rlWeO_MsJOA?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Show SELinux failure messages&amp;nbsp;properly&lt;/h3&gt;
&lt;p&gt;As a follow up from last week, several bug fixes landed in the new SELinux troubleshooting&amp;nbsp;support.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.101 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.101"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.101-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Cockpit 0.100 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.100.html" rel="alternate"></link><published>2016-04-01T15:30:00+00:00</published><updated>2016-04-01T15:30:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-04-01:/blog/cockpit-0.100.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from&amp;nbsp;0.100&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from this weeks 0.100 release. Even though 0.100 may seem to be a magical number &amp;#8230; it&amp;#8217;s really just the number after 0.99&amp;nbsp;:D&lt;/p&gt;
&lt;h3&gt;SELinux&amp;nbsp;Troubleshooting&lt;/h3&gt;
&lt;p&gt;Cockpit can now help you troubleshoot &lt;a href="http://stopdisablingselinux.com/"&gt;SELinux&lt;/a&gt; problems, and show you fixes for repairing the various issues. This is pretty amazing for system admins who really would rather be secure, but keep bumping into stuff that SELinux is blocking. There&amp;#8217;s more to come on both SELinux and troubleshooting in the future. Take a look at what landed in this&amp;nbsp;release:&lt;/p&gt;
&lt;iframe width="960" height="720" src="https://www.youtube.com/embed/eBGK6qSmnng?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Image Registry&amp;nbsp;Interface&lt;/h3&gt;
&lt;p&gt;There&amp;#8217;s a new Image Registry user interface. It works with &lt;a href="http://www.projectatomic.io/"&gt;Atomic Platform&lt;/a&gt; or &lt;a href="https://www.openshift.org/"&gt;Openshift&lt;/a&gt; clusters. By default this shows up in the Cockpit &amp;#8220;Cluster&amp;#8221; admin&amp;nbsp;dashboard.&lt;/p&gt;
&lt;p&gt;But more importantly you can deploy this as a standalone image registry, complete with storage, authentication and an interface. See &lt;a href="http://www.projectatomic.io/registry"&gt;www.projectatomic.io/registry&lt;/a&gt; for more&amp;nbsp;info.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a quick&amp;nbsp;demo:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/VSOAASf1Usw?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Storage sliders and&amp;nbsp;more&lt;/h3&gt;
&lt;p&gt;Marius has been working on cleaning up the storage &lt;span class="caps"&gt;UI&lt;/span&gt;. One of the changes you&amp;#8217;ll notice is that you can now use a slider to choose a size for new volumes or file systems, and specify the size units you want to&amp;nbsp;use:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Storage number slider" src="images/cockpit-storage-slider.png"&gt;&lt;/p&gt;
&lt;p&gt;Debian builds now also include the Storage&amp;nbsp;page.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Peter worked on adding Cluster storage configuration to the Kubernetes admin dashboard. Basic support will be in the next release. Here&amp;#8217;s a&amp;nbsp;screenshot:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Kubernetes persistent volume" src="images/cockpit-kubernetes-storage.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.100 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.100"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.100-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Cockpit 0.99 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.99.html" rel="alternate"></link><published>2016-03-24T18:35:00+00:00</published><updated>2016-03-24T18:35:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-03-24:/blog/cockpit-0.99.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from 0.96 through&amp;nbsp;0.99&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit is the &lt;a href="http://cockpit-project.org/"&gt;modern Linux admin interface&lt;/a&gt;. There&amp;#8217;s a new release every week. Here are the highlights from 0.96 through&amp;nbsp;0.99.&lt;/p&gt;
&lt;h3&gt;Kubernetes Cockpit&amp;nbsp;Pod&lt;/h3&gt;
&lt;p&gt;The Kubernetes cluster admin interface is now deployable as a &lt;a href="http://kubernetes.io"&gt;Kubernetes&lt;/a&gt; pod. Peter did a lot of work to make this happen. It&amp;#8217;s a good example of taking just one part Cockpit, containerizing it and running it in a completely different&amp;nbsp;environment.&lt;/p&gt;
&lt;p&gt;You can use the &lt;a href="http://cockpit-project.org/guide/latest/feature-kubernetes.html"&gt;commands listed in the documentation&lt;/a&gt; to run the pod. Here&amp;#8217;s a&amp;nbsp;demo:&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/OCbuzBe7Ems?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Locking down Cockpit with&amp;nbsp;Content-Security-Policy&lt;/h3&gt;
&lt;p&gt;&lt;a href="http://content-security-policy.com/"&gt;Content-Security-Policy&lt;/a&gt; is like SELinux in your browser. You declare
what your application is allowed to do, and the browser prevents other things from happening, like cross site scripting attacks.  Because the Cockpit javascript code has as much access to the system as the logged in user, Cockpit needs to make sure that attackers cannot sneak in javascript code into the browser&amp;nbsp;session.&lt;/p&gt;
&lt;p&gt;In the last few releases, a strict policy was applied to the network, Kubernetes, Docker, storage, and accounts parts of the interface, just a few more remaining before all of Cockpit is locked down in this&amp;nbsp;way.&lt;/p&gt;
&lt;h3&gt;Debian&amp;nbsp;packages&lt;/h3&gt;
&lt;p&gt;Cockpit has been testing each change and release against Debian during continuous integration for a while. Lars recently added installable Debian binary packages for each release. We&amp;#8217;re still looking for a &lt;a href="https://wiki.debian.org/DebianDeveloper"&gt;&lt;span class="caps"&gt;DD&lt;/span&gt; maintainer&lt;/a&gt; to help take those tested packages and include them in Debian&amp;nbsp;proper.&lt;/p&gt;
&lt;p&gt;See the &lt;a href="http://cockpit-project.org/running.html"&gt;documentation for how to use the Cockpit Debian packages&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;The ability to troubleshoot &lt;a href="http://stopdisablingselinux.com/"&gt;SELinux&lt;/a&gt; in Cockpit is pretty exciting. Dominik has lots of the work in this area and it&amp;#8217;s nearly ready. Watch the video below. Once it&amp;#8217;s finished you&amp;#8217;ll be able to just click a button to resolve many (most?) SELinux issues found on a&amp;nbsp;server.&lt;/p&gt;
&lt;iframe width="960" height="720" src="https://www.youtube.com/embed/s6C29f8dSRQ?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Garret designed a &lt;span class="caps"&gt;UI&lt;/span&gt; for using Docker with an &lt;span class="caps"&gt;LVM&lt;/span&gt; pool as you would on &lt;a href="http://www.projectatomic.io/download/"&gt;Atomic Host&lt;/a&gt;. That is: A &lt;span class="caps"&gt;UI&lt;/span&gt; for &lt;a href="https://github.com/projectatomic/docker-storage-setup"&gt;docker-storage-setup&lt;/a&gt;. I&amp;#8217;m looking forward to this in Cockpit. Sneak peak&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Container Storage Designs" src="https://raw.githubusercontent.com/cockpit-project/cockpit-design/9bd7086a4a8492b72269c58272d063b3372116c3/containers/container-storage.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.99 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://cockpit-project.org/running.html"&gt;For your Linux&amp;nbsp;system&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.95"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.99-1.fc24"&gt;Fedora&amp;nbsp;24&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 23, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.95 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.95.html" rel="alternate"></link><published>2016-02-12T20:32:00+00:00</published><updated>2016-02-12T20:32:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2016-02-12:/blog/cockpit-0.95.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s highlights from 0.90 through&amp;nbsp;0.95&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. Here are the highlights from 0.90 through&amp;nbsp;0.95.&lt;/p&gt;
&lt;h2&gt;Set &lt;span class="caps"&gt;CPU&lt;/span&gt; performance profile via&amp;nbsp;tuned&lt;/h2&gt;
&lt;p&gt;Cockpit can now talk to tuned and set the &lt;span class="caps"&gt;CPU&lt;/span&gt; performance profile of the
system. Thanks to Ryan Barry for doing the initial prototype, and
Jaroslav Škarvada for fixing up tuned to include profile&amp;nbsp;descriptions.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/u1ba4aQkueA?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;iSCSI initiator&amp;nbsp;support&lt;/h2&gt;
&lt;p&gt;The iSCSI support that Marius worked on with the storaged folks has
finally landed in a Cockpit release. It was waiting on fixes in some
dependencies. Have a&amp;nbsp;look:&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/N1Lw2OVLDoo?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;Support for WebSocket client in&amp;nbsp;cockpit-bridge&lt;/h2&gt;
&lt;p&gt;In order to better talk to services like Kubernetes or the Atomic Docker
Registry we&amp;#8217;ve added WebSocket support to the cockpit-bridge. It can now
connect to local WebSockets on the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;But here&amp;#8217;s an example of what you can do with that: The demo below shows
&lt;span class="caps"&gt;GTK&lt;/span&gt;+ 3 apps running inside of Cockpit. &lt;span class="caps"&gt;GTK&lt;/span&gt;+ 3 supports &lt;span class="caps"&gt;HTML5&lt;/span&gt; as a
display mode, and Cockpit can wrap that in authentication and a real
Linux login&amp;nbsp;session:&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/6ZbTYj3xzzg?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;Debian Source&amp;nbsp;Packages&lt;/h2&gt;
&lt;p&gt;As a step towards working getting Cockpit into Debian we now create
Debian source packages during our continuous delivery process. These end
up here for&amp;nbsp;now:&lt;/p&gt;
&lt;pre&gt;
deb-src https://fedorapeople.org/groups/cockpit/debian-unstable ./
&lt;/pre&gt;

&lt;h2&gt;Content Security&amp;nbsp;Policy&lt;/h2&gt;
&lt;p&gt;Because the Cockpit javascript code has as much access to the system as
the logged in user, Cockpit needs to make sure that attackers cannot
sneak in javascript code into the browser&amp;nbsp;session.&lt;/p&gt;
&lt;p&gt;Obviously we do this by escaping &lt;span class="caps"&gt;HTML&lt;/span&gt; output carefully and other best
practices. But in addition to that we&amp;#8217;ve started to deploy Content
Security&amp;nbsp;Policy.&lt;/p&gt;
&lt;p&gt;If you&amp;#8217;re unfamiliar with &lt;a href="https://en.wikipedia.org/wiki/Content_Security_Policy"&gt;Content Security Policy&lt;/a&gt;
 it&amp;#8217;s a bit like SELinux for a browser session. It tells the browser we explicitly don&amp;#8217;t
want to execute any code, styling or other resources that get loaded
from Cockpit&amp;nbsp;itself.&lt;/p&gt;
&lt;p&gt;We haven&amp;#8217;t turned on the strict policy for all of Cockpit yet, and we&amp;#8217;re
doing it component by&amp;nbsp;component.&lt;/p&gt;
&lt;h2&gt;Fix cockpit-ws start while reading from&amp;nbsp;/dev/urandom&lt;/h2&gt;
&lt;p&gt;Previously when there were interruptions during reading from
/dev/urandom while starting cockpit-ws, then initialization would fail.
This has now been&amp;nbsp;fixed.&lt;/p&gt;
&lt;h2&gt;OAuth login&amp;nbsp;support&lt;/h2&gt;
&lt;p&gt;Cockpit now has OAuth login support. It doesn&amp;#8217;t exactly work out of the
box for logging into a local Linux system, but it can be used to create
custom dashboards or containers based on Cockpit components that use
OAuth to&amp;nbsp;authenticate.&lt;/p&gt;
&lt;p&gt;See &lt;a href="https://rawgit.com/cockpit-project/cockpit/master/doc/authentication.md"&gt;the documentation&lt;/a&gt;
for more&amp;nbsp;info.&lt;/p&gt;
&lt;h2&gt;Running &lt;span class="caps"&gt;RHEL&lt;/span&gt; &lt;span class="caps"&gt;QE&lt;/span&gt;&amp;nbsp;Tests&lt;/h2&gt;
&lt;p&gt;When you open a Cockpit pull request, take a look at the test suites
that are run against&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;This week we finished work to run the Cockpit &lt;span class="caps"&gt;RHEL&lt;/span&gt; &lt;span class="caps"&gt;QE&lt;/span&gt; tests upstream git
pull request. Rather than catching issues on the backend of things,
we&amp;#8217;ll be ahead of the&amp;nbsp;game.&lt;/p&gt;
&lt;h2&gt;Vagrant without &lt;span class="caps"&gt;NFS&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;Cockpit&amp;#8217;s Vagrantfile used to use &lt;span class="caps"&gt;NFS&lt;/span&gt; to keep the git checkout in sync
with the image. This caused many folks to have a hard time using Vagrant
to hack on Cockpit, so the &lt;span class="caps"&gt;NFS&lt;/span&gt; stuff is now dropped. You can still bring
up the vagrant &lt;span class="caps"&gt;VM&lt;/span&gt; as&amp;nbsp;before:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then access Cockpit on&amp;nbsp;https://localhost:9090&lt;/p&gt;
&lt;p&gt;However if you make changes to the stuff in the git repo, you need to
run an extra vagrant command before the running &lt;span class="caps"&gt;VM&lt;/span&gt; will pick it&amp;nbsp;up:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vagrant rsync
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;See &lt;a href="https://rawgit.com/cockpit-project/cockpit/master/HACKING.md"&gt;&lt;span class="caps"&gt;HACKING&lt;/span&gt;.md in the git&lt;/a&gt;
repo for more&amp;nbsp;details.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.95 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.95"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/cockpit-0.95-1.fc23"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.89 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.89.html" rel="alternate"></link><published>2015-12-22T13:04:00+00:00</published><updated>2015-12-22T13:04:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-12-22:/blog/cockpit-0.89.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.89&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. Here&amp;#8217;s a summary of the 0.87, 0.88 and 0.89&amp;nbsp;releases.&lt;/p&gt;
&lt;h3&gt;OSTree upgrades and&amp;nbsp;rollbacks&lt;/h3&gt;
&lt;p&gt;Peter worked to finish the basic OSTree &lt;span class="caps"&gt;UI&lt;/span&gt; has been merged into Cockpit.
This lets the admin perform upgrades and rollbacks on Atomic&amp;nbsp;Host.&lt;/p&gt;
&lt;p&gt;Colin, Peter and the OSTree guys worked together to build a DBus
interface in rpm-ostree so that callers can interact with the update&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;Demo:&amp;nbsp;https://youtu.be/Tmj0Nrkasmk&lt;/p&gt;
&lt;p&gt;Before this is usable by users, the cockpit-ostree package will need to
(be included in Atomic Host, first on&amp;nbsp;Fedora)[https://bugzilla.redhat.com/show_bug.cgi?id=1292826].&lt;/p&gt;
&lt;h2&gt;Custom login authentication&amp;nbsp;scripts&lt;/h2&gt;
&lt;p&gt;The Cockpit WebService cockpit-ws component now supports custom
authenticators for various auth mechanisms. Some assembly&amp;nbsp;required.&lt;/p&gt;
&lt;p&gt;Peter has implemented this as part of containerizing the kubernetes and
docker registry admin&amp;nbsp;dashboards.&lt;/p&gt;
&lt;p&gt;https://github.com/cockpit-project/cockpit/blob/master/doc/authentication.md&lt;/p&gt;
&lt;h2&gt;Stubbed out bridge for non-local&amp;nbsp;users&lt;/h2&gt;
&lt;p&gt;This means that the Cockpit parts can be customized to that we can allow
non-local users to log in and interact with certain Cockpit components
that don&amp;#8217;t interact with the local system. Again this is part of
containerizing the kubernetes and docker registry admin&amp;nbsp;dashboards.&lt;/p&gt;
&lt;h2&gt;Specific dashboards can now be shown as&amp;nbsp;default&lt;/h2&gt;
&lt;p&gt;A specific Cockpit dashboard can now be shown as the default when
logging in, by specifying a lower &amp;#8220;order&amp;#8221; than default&amp;nbsp;dashboard.&lt;/p&gt;
&lt;p&gt;https://github.com/cockpit-project/cockpit/pull/3317&lt;/p&gt;
&lt;h2&gt;Fix login on&amp;nbsp;Windows&lt;/h2&gt;
&lt;p&gt;Cockpit no longer prompts for a strange second login (which had to do
with &lt;span class="caps"&gt;SSO&lt;/span&gt;) on Windows. There are some remaining issues with how Cockpit
works on Internet Explorer, but most have been&amp;nbsp;solved.&lt;/p&gt;
&lt;p&gt;https://github.com/cockpit-project/cockpit/issues/2164&lt;/p&gt;
&lt;h2&gt;Host name in self-signed&amp;nbsp;certificate&lt;/h2&gt;
&lt;p&gt;In order to make life easier, when generating a self-signed certificate,
Cockpit now includes the local host name. Self-signed certificates
remain a stop gap. Real world deployments should replace them with
properly signed certificates from a certificate&amp;nbsp;authority:&lt;/p&gt;
&lt;p&gt;http://cockpit-project.org/guide/latest/https.html&lt;/p&gt;
&lt;h2&gt;Routine Debian&amp;nbsp;testing&lt;/h2&gt;
&lt;p&gt;The Cockpit Project has started routinely testing each Cockpit pull request on Debian Unstable using real Debian packaging. Marius did some great work here. This means we&amp;#8217;re are close to doing real continuous delivery to Debian. Next step, a repo, and a&amp;nbsp;maintainer.&lt;/p&gt;
&lt;p&gt;https://fedorapeople.org/groups/cockpit/status/debian-unstable.html&lt;/p&gt;
&lt;h2&gt;Case insensitive&amp;nbsp;cockpit.conf&lt;/h2&gt;
&lt;p&gt;The cockpit.conf file is now case insensitive for options and headings. This should make editing it less error&amp;nbsp;prone.&lt;/p&gt;
&lt;p&gt;http://cockpit-project.org/guide/latest/cockpit.conf.5.html&lt;/p&gt;
&lt;h2&gt;Reorder graphs on server summary&amp;nbsp;page&lt;/h2&gt;
&lt;p&gt;Thijs reordered the resource graphs on the server summary page in the same order as &lt;span class="caps"&gt;GNOME&lt;/span&gt;, Windows, and&amp;nbsp;elsewhere.&lt;/p&gt;
&lt;h2&gt;Syncing of users when adding a&amp;nbsp;server&lt;/h2&gt;
&lt;p&gt;Cockpit no longer requires or suggests that the admin accounts be synced between servers when adding another server to the dashboard. This feature is still available when editing the server options on the&amp;nbsp;dashboard.&lt;/p&gt;
&lt;h2&gt;Weak dependencies on Fedora&amp;nbsp;24+&lt;/h2&gt;
&lt;p&gt;On Fedora 24 and later, one can have &amp;#8216;Suggests&amp;#8217; and &amp;#8216;Recommends&amp;#8217; dependencies between packages. Cockpit now takes advantage of these for its &amp;#8216;cockpit&amp;#8217; meta package making certain parts removable without removing&amp;nbsp;&amp;#8216;cockpit&amp;#8217;.&lt;/p&gt;
&lt;h2&gt;Vagrantfile working&amp;nbsp;again&lt;/h2&gt;
&lt;p&gt;The Vagrant file now pulls from the correct lastest binary builds of Cockpit. To use&amp;nbsp;it:&lt;/p&gt;
&lt;p&gt;$ git clone https://github.com/cockpit-project/cockpit
$ cd cockpit
$ sudo vagrant&amp;nbsp;up&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;SOS&lt;/span&gt;&amp;nbsp;Reporting&lt;/h3&gt;
&lt;p&gt;Users can now prepare an &lt;span class="caps"&gt;SOS&lt;/span&gt; Report containing information about the system and send it to their support&amp;nbsp;representative.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/-6rfWUoOQbs?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Stef has done work to cleanup the Javascript dependencies of Cockpit. Broadly these fall into two&amp;nbsp;categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Development dependencies: only used while developing Cockpit, not even used while building the tarball. These are &lt;code&gt;node_modules&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runtime dependencies: used while Cockpit is running and built
into the various Cockpit packages. These are &lt;code&gt;bower_components&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The latter should be replaceable at build-time. The cleanup work moves in this direction, but it&amp;#8217;s not complete&amp;nbsp;yet.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Ryan Barry has posted a pull request adding tuned (system performance
profile) support to&amp;nbsp;Cockpit:&lt;/p&gt;
&lt;p&gt;https://github.com/cockpit-project/cockpit/pull/3279&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.86 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.85"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-36d1df063f"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.86 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.86.html" rel="alternate"></link><published>2015-12-04T13:04:00+00:00</published><updated>2015-12-04T13:04:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-12-04:/blog/cockpit-0.86.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.86&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.86.&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;SOS&lt;/span&gt;&amp;nbsp;Reporting&lt;/h3&gt;
&lt;p&gt;Users can now prepare an &lt;span class="caps"&gt;SOS&lt;/span&gt; Report containing information about the system and send it to their support&amp;nbsp;representative.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/-6rfWUoOQbs?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Stef has done work to cleanup the Javascript dependencies of Cockpit. Broadly these fall into two&amp;nbsp;categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Development dependencies: only used while developing Cockpit, not even used while building the tarball. These are &lt;code&gt;node_modules&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Runtime dependencies: used while Cockpit is running and built
into the various Cockpit packages. These are &lt;code&gt;bower_components&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The latter should be replaceable at build-time. The cleanup work moves in this direction, but it&amp;#8217;s not complete&amp;nbsp;yet.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.86 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.85"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-36d1df063f"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.85 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.85.html" rel="alternate"></link><published>2015-11-27T11:24:00+00:00</published><updated>2015-11-27T11:24:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-11-27:/blog/cockpit-0.85.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.85&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.85.&lt;/p&gt;
&lt;h3&gt;Varying users on dashboard&amp;nbsp;machines&lt;/h3&gt;
&lt;p&gt;Cockpit now supports adding machines to the dashboard with different
user logins for each one. This can be useful in cases where you&amp;#8217;re
adding cloud instances to your dashboard, and they require logging in
with a &lt;em&gt;cloud-user&lt;/em&gt; and not the same user as your other&amp;nbsp;servers.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/N93I0gzvj5c?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Non standard &lt;span class="caps"&gt;SSH&lt;/span&gt;&amp;nbsp;ports&lt;/h3&gt;
&lt;p&gt;When Cockpit connects to a machine that was added to the dashboard, it
does so over &lt;span class="caps"&gt;SSH&lt;/span&gt;. Cockpit can now connect on non-standard &lt;span class="caps"&gt;SSH&lt;/span&gt;&amp;nbsp;ports.&lt;/p&gt;
&lt;p&gt;See the video&amp;nbsp;above.&lt;/p&gt;
&lt;h3&gt;Troubleshooting machine&amp;nbsp;connectivity&lt;/h3&gt;
&lt;p&gt;Cockpit now allows you to fix connectivity issues for servers that are
added to the dashboard. This includes adjusting authentication, checking
on host keys and&amp;nbsp;more.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cockpit-project/cockpit-design/master/add-system/machine-dialogs.png"&gt;&lt;img alt="Machine Dialogs Wireframes" src="images/machine-dialogs.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Fix SELinux certificate file type&amp;nbsp;bug&lt;/h3&gt;
&lt;p&gt;Cockpit 0.84 failed to start on certain distros because SELinux wasn&amp;#8217;t
available or couldn&amp;#8217;t be used to reset the certificate file context.
This &lt;a href="https://github.com/cockpit-project/cockpit/issues/3206"&gt;bug has been fixed&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Work around bug in Firefox&amp;nbsp;42&lt;/h3&gt;
&lt;p&gt;A bug in Firefox 42 caused Cockpit to often load with a blank screen,
due to layout calculation issues. The layout code has been changed to
work around &lt;a href="https://bugzilla.redhat.com/show_bug.cgi?id=1185136"&gt;this issue&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Docker restart container&amp;nbsp;timeout&lt;/h3&gt;
&lt;p&gt;Previously Cockpit called the Docker &lt;span class="caps"&gt;API&lt;/span&gt; without a timeout when
restarting containers. This caused Docker to immediately kill the
container without waiting for it to shutdown cleanly. Cockpit now
&lt;a href="https://github.com/cockpit-project/cockpit/issues/3230"&gt;passes a timeout&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Marius has &lt;a href="https://github.com/cockpit-project/cockpit/pull/3202"&gt;made progress&lt;/a&gt;
getting the Cockpit integration test suite to run on Debian. Without the
integration tests running for a certain distro, there&amp;#8217;s no way to ensure Cockpit
actually works&amp;nbsp;there.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.85 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.85"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-e368240084"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.83 and 0.84 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.84.html" rel="alternate"></link><published>2015-11-19T11:24:00+00:00</published><updated>2015-11-19T11:24:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-11-19:/blog/cockpit-0.84.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.84&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was 0.84. I&amp;#8217;ll also include notes from 0.83&amp;nbsp;here.&lt;/p&gt;
&lt;h3&gt;Building Cockpit on&amp;nbsp;Debian&lt;/h3&gt;
&lt;p&gt;At systemd.conf Dominik worked with Michael Biebl one of the Debian systemd maintainers on packaging Cockpit for Debian. We&amp;#8217;re still looking for a maintainer long&amp;nbsp;term.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a &lt;a href="http://dominik.perpeet.eu/cockpit-on-debian-8-2"&gt;blog post&lt;/a&gt; with more&amp;nbsp;details.&lt;/p&gt;
&lt;h3&gt;Cross Distro Integration&amp;nbsp;Tests&lt;/h3&gt;
&lt;p&gt;In Cockpit we run hundreds of tests on real operating systems for each pull request. Without running these tests on an &lt;span class="caps"&gt;OS&lt;/span&gt; it&amp;#8217;s impossible to know that the features of Cockpit actually works. So far we&amp;#8217;ve been running these tests on Fedora, Atomic, and &lt;span class="caps"&gt;RHEL&lt;/span&gt;. But we&amp;#8217;d really like to run them on Debian as well. That&amp;#8217;ll make Cockpit much more well&amp;nbsp;rounded.&lt;/p&gt;
&lt;p&gt;Marius worked on the first steps toward running the tests on Debian, by doing the Cockpit &lt;a href="https://github.com/cockpit-project/cockpit/pull/3138"&gt;build inside of our test &lt;span class="caps"&gt;VM&lt;/span&gt; images&lt;/a&gt;. Hopefully we&amp;#8217;ll see more progress on&amp;nbsp;this.&lt;/p&gt;
&lt;h3&gt;SELinux certificate file&amp;nbsp;type&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;cockpit.service&lt;/code&gt; helpfully sets the appropriate user and group &lt;a href="http://cockpit-project.org/guide/latest/https.html"&gt;on the certificates&lt;/a&gt; that cockpit-ws will use for &lt;span class="caps"&gt;TLS&lt;/span&gt;. Now it also sets the SELinux file context type properly, so this is one less things to break for an&amp;nbsp;admin.&lt;/p&gt;
&lt;h3&gt;Cockpit manual&amp;nbsp;page&lt;/h3&gt;
&lt;p&gt;There is now a &lt;code&gt;man cockpit&lt;/code&gt; overview manual page that links to the guide and&amp;nbsp;elsewhere.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Marius has done work on an &lt;span class="caps"&gt;SOS&lt;/span&gt; reporting view. Needs some further backend work, but should be ready&amp;nbsp;soon:&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/-6rfWUoOQbs?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;Peter has mostly completed the work to add machines with alternate users, and non-standard &lt;span class="caps"&gt;SSH&lt;/span&gt; ports. Among other things, this is useful for cloud instances. I&amp;#8217;m looking forward to seeing this in Cockpit&amp;nbsp;0.85.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cockpit-project/cockpit-design/master/add-system/machine-dialogs.png"&gt;&lt;img alt="Machine Dialogs Wireframes" src="images/machine-dialogs.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.84 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.84"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-96b41c5190"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/g/cockpit/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.82 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.82.html" rel="alternate"></link><published>2015-10-28T19:05:00+00:00</published><updated>2015-10-28T19:05:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-10-28:/blog/cockpit-0.82.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.82&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.82&lt;/p&gt;
&lt;h3&gt;Distributed&amp;nbsp;Tests&lt;/h3&gt;
&lt;p&gt;In Cockpit we run thousands of integration tests per day against pull requests and git master. Each test brings up up Cockpit in a full operating system &lt;span class="caps"&gt;VM&lt;/span&gt;, and hammers on it in some way. Without these tests it&amp;#8217;s impossible to validate that Cockpit actually&amp;nbsp;works.&lt;/p&gt;
&lt;p&gt;Last week, the server doing this testing work broke down. I&amp;#8217;ve been working over the last week to fix that, along with&amp;nbsp;others.&lt;/p&gt;
&lt;p&gt;But we&amp;#8217;ve done more, instead of just putting this on another server, we&amp;#8217;ve worked to make these integration tests run in a distributed manner across several machines each doing a part of the&amp;nbsp;tests.&lt;/p&gt;
&lt;p&gt;The tests are staged via privileged containers, and run in libvirt&amp;nbsp;VMs.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/test/README"&gt;some documentation&lt;/a&gt; on how to use the new&amp;nbsp;tests.&lt;/p&gt;
&lt;h3&gt;Certificate&amp;nbsp;Chains&lt;/h3&gt;
&lt;p&gt;Cockpit has supported using certificate chains for its cockpit-ws component, but only when the underying GLib (2.44+) supported it. In this release we start to support running &lt;span class="caps"&gt;TLS&lt;/span&gt; with proper certificate chains even on older GLib versions. The &lt;a href="http://cockpit-project.org/guide/0.82/https.html#https-certificates"&gt;documentation&lt;/a&gt; and appropriate tests were&amp;nbsp;updated.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.82 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.82"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-273bc74c11"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/sgallagh/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 21, 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.81 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.81.html" rel="alternate"></link><published>2015-10-21T22:19:00+00:00</published><updated>2015-10-21T22:19:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-10-21:/blog/cockpit-0.81.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.81&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.81&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;NTP&lt;/span&gt;&amp;nbsp;servers&lt;/h3&gt;
&lt;p&gt;Cockpit now allows configuration of which &lt;span class="caps"&gt;NTP&lt;/span&gt; servers are used for time syncing.  This configuration is possible when &lt;a href="http://www.freedesktop.org/software/systemd/man/systemd-timesyncd.service.html"&gt;timesyncd&lt;/a&gt; is being used as the &lt;span class="caps"&gt;NTP&lt;/span&gt;&amp;nbsp;service.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/Rmzt1L4ANgo?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Network switch&amp;nbsp;regression&lt;/h3&gt;
&lt;p&gt;There was a regression in Cockpit 0.78 where certain on/off switches in the networking configuration stopped working. This has now been&amp;nbsp;fixed.&lt;/p&gt;
&lt;h3&gt;Delete Openshift routes and deployment&amp;nbsp;configs&lt;/h3&gt;
&lt;p&gt;In the Kubernetes cluster dashboard, it&amp;#8217;s now possible to delete Openshift style routes and deployment&amp;nbsp;configs.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;I&amp;#8217;ve refactored the Cockpit Kubernetes &lt;a href="https://github.com/kubernetes-ui/container-terminal/"&gt;container terminal widget&lt;/a&gt; for use by other projects. It&amp;#8217;s been integrated into the Openshift Web Console for starters. This widget will be used by Cockpit&amp;nbsp;soon.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/SMxVQBD3Kho?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.81 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.81"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-c3b74dffee"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/sgallagh/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 21, 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.80 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.80.html" rel="alternate"></link><published>2015-10-14T22:19:00+00:00</published><updated>2015-10-14T22:19:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-10-14:/blog/cockpit-0.80.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.80&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.80&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;SSH&lt;/span&gt; private&amp;nbsp;keys&lt;/h3&gt;
&lt;p&gt;You can now use Cockpit to load &lt;span class="caps"&gt;SSH&lt;/span&gt; private keys into the ssh-agent that&amp;#8217;s
running in the Cockpit login session. These keys are used to authenticate
against other systems when they are added to the dashboard. Cockpit also
supports inspecting and changing the passwords for &lt;span class="caps"&gt;SSH&lt;/span&gt; private&amp;nbsp;keys.&lt;/p&gt;
&lt;iframe width="853" height="480" src="https://www.youtube.com/embed/RZ_N2iCPm_U" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Always start an &lt;span class="caps"&gt;SSH&lt;/span&gt;&amp;nbsp;agent&lt;/h3&gt;
&lt;p&gt;Cockpit now always starts an &lt;span class="caps"&gt;SSH&lt;/span&gt; agent in the Cockpit login session. Previously
this would happen if the correct &lt;span class="caps"&gt;PAM&lt;/span&gt; modules were&amp;nbsp;loaded.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Peter has done work to build an OSTree &lt;span class="caps"&gt;UI&lt;/span&gt;, useful for upgrading and rolling back
the operating system on Atomic&amp;nbsp;Host:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cockpit-project/cockpit-design/master/software-updates/software-updates-ostree-alt.png"&gt;&lt;img alt="OSTree Design Work" src="images/cockpit-ostree-design.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Subin has done work to get Nulecule Kubernetes applications working with Atomic
and larger Kubernetes&amp;nbsp;clusters.&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.80 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.80"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-28a7f2b07f"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/sgallagh/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 21, 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Using Vagrant to Develop Cockpit</title><link href="http://cockpit-project.org/blog/cockpit-vagrantfile.html" rel="alternate"></link><published>2015-10-08T00:00:00+00:00</published><updated>2015-10-08T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-10-08:/blog/cockpit-vagrantfile.html</id><summary type="html">&lt;p&gt;Starting with Cockpit release 0.79 you can use &lt;a href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; to bring up a &lt;span class="caps"&gt;VM&lt;/span&gt; in which
you can test or develop Cockpit. The &lt;span class="caps"&gt;VM&lt;/span&gt; is isolated from your main system so any system configuration
you change via Cockpit will only happen in the &lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt; mounts the …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Starting with Cockpit release 0.79 you can use &lt;a href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; to bring up a &lt;span class="caps"&gt;VM&lt;/span&gt; in which
you can test or develop Cockpit. The &lt;span class="caps"&gt;VM&lt;/span&gt; is isolated from your main system so any system configuration
you change via Cockpit will only happen in the &lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt; mounts the Cockpit package assets from your git repository checkout, so when you make on the
host system, you can refresh the browser and immediately see the resulting changes. For changes to
C code, the Cockpit binaries would have to be rebuilt and testing via Vagrant won&amp;#8217;t&amp;nbsp;work.&lt;/p&gt;
&lt;h2&gt;Getting&amp;nbsp;Started&lt;/h2&gt;
&lt;p&gt;To start, you&amp;#8217;ll need Vagrant. On Fedora I use &lt;em&gt;vagrant-libvirt&lt;/em&gt;. In addition keep in mind that on
&lt;em&gt;vagrant-libvirt&lt;/em&gt; requires root privileges, so you&amp;#8217;ll need to use vagrant with &lt;code&gt;sudo&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo yum install vagrant vagrant-libvirt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, in a copy of the Cockpit git repository, you run &lt;code&gt;vagrant up&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/cockpit-project/cockpit
$ cd cockpit
$ sudo vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The first time this runs it&amp;#8217;ll take a while, but eventually you&amp;#8217;ll have a Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt; running. When you
do this step again, it should be pretty&amp;nbsp;fast.&lt;/p&gt;
&lt;p&gt;The &lt;span class="caps"&gt;VM&lt;/span&gt; will
listen for connections on your local machine&amp;#8217;s &lt;a href="http://localhost:9090"&gt;&lt;code&gt;http://localhost:9090&lt;/code&gt;&lt;/a&gt;, but
even though you&amp;#8217;re connecting to &lt;em&gt;localhost&lt;/em&gt; it&amp;#8217;ll be Cockpit in the &lt;span class="caps"&gt;VM&lt;/span&gt; you&amp;#8217;re talking&amp;nbsp;to.&lt;/p&gt;
&lt;p&gt;If you already have Cockpit running on your local machine, then this won&amp;#8217;t work, and you&amp;#8217;ll need to
use the &lt;span class="caps"&gt;IP&lt;/span&gt; address of the &lt;span class="caps"&gt;VM&lt;/span&gt; instead of &lt;em&gt;localhost&lt;/em&gt;. To find&amp;nbsp;it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vagrant ssh-config
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Two user accounts are created in the &lt;span class="caps"&gt;VM&lt;/span&gt;, and you can use either one to log into&amp;nbsp;Cockpit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User: &amp;#8220;admin&amp;#8221; Password:&amp;nbsp;&amp;#8220;foobar&amp;#8221;&lt;/li&gt;
&lt;li&gt;User: &amp;#8220;root&amp;#8221; Password:&amp;nbsp;&amp;#8220;foobar&amp;#8221;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Testing a Pull&amp;nbsp;Request&lt;/h2&gt;
&lt;p&gt;If there&amp;#8217;s a Cockpit &lt;a href="https://github.com/cockpit-project/cockpit/pulls"&gt;pull request&lt;/a&gt; that you&amp;#8217;d like to
test, you can now do that with the Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt;.  Replace the &lt;em&gt;0000&lt;/em&gt; in the following command with the
number of the pull&amp;nbsp;request:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git fetch origin pull/0000/head
$ git checkout FETCH_HEAD
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The pull request can only contain code to Cockpit package assets. If it contains changes to the &lt;code&gt;src/&lt;/code&gt;
directory, then the pull request involves rebuilding binaries, and testing it via Vagrant won&amp;#8217;t&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;Now refresh your browser, or if necessary, login again. You should see the changes in the pull request
reflected in&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;h2&gt;Making a&amp;nbsp;change&lt;/h2&gt;
&lt;p&gt;You can make a change to Cockpit while testing that out in your Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt;. The changes should be
to Cockpit package assets. If you change something in the &lt;code&gt;src/&lt;/code&gt; directory, then binaries will have
to be rebuilt, and testing it via Vagrant won&amp;#8217;t&amp;nbsp;work.&lt;/p&gt;
&lt;p&gt;I chose change some wording in the sidebar in &lt;code&gt;pkg/shell/index.html&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;          &amp;lt;a data-toggle=&amp;quot;collapse&amp;quot; data-target=&amp;quot;#tools-panel&amp;quot; class=&amp;quot;collapsed&amp;quot; translatable=&amp;quot;yes&amp;quot;&amp;gt;
-           Tools
+           Beavers &amp;#39;n Ducks
          &amp;lt;/a&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And after refreshing Cockpit, I can see that&amp;nbsp;change:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Showing the change made" src="images/vagrant-change.png"&gt;&lt;/p&gt;
&lt;p&gt;The same applies to javascript or &lt;span class="caps"&gt;CSS&lt;/span&gt; changes as well. In order to actually contribute a change to Cockpit
you&amp;#8217;ll want to look at the information about
&lt;a href="https://github.com/cockpit-project/cockpit/wiki/Contributing"&gt;Contributing&lt;/a&gt; and if you need help
understanding how to add a
&lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;plugin package&lt;/a&gt;
you can look at the &lt;a href="http://cockpit-project.org/guide/latest/development.html"&gt;Developer Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Bringing the Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt; in&amp;nbsp;sync&lt;/h2&gt;
&lt;p&gt;After each Cockpit release, there will be new binary parts to Cockpit. In order to continue to use the
Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt;, you&amp;#8217;ll need to rebuild it. A message like this should appear when that&amp;#8217;s&amp;nbsp;necessary.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cockpit is incompatible with sources" src="images/cockpit-incompatible-sources.png"&gt;&lt;/p&gt;
&lt;p&gt;Rebuild the Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt; like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vagrant destroy
$ sudo vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Troubleshooting&lt;/h2&gt;
&lt;p&gt;On Fedora, FirewallD got in the way of Vagrants use of &lt;span class="caps"&gt;NFS&lt;/span&gt;. On my machine, I had to do this
to get it to&amp;nbsp;work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo firewall-cmd --set-default-zone=trusted
&lt;/pre&gt;&lt;/div&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit 0.79 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.79.html" rel="alternate"></link><published>2015-10-07T22:23:00+00:00</published><updated>2015-10-07T22:23:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-10-07:/blog/cockpit-0.79.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.79&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.79&lt;/p&gt;
&lt;h3&gt;Vagrant&amp;nbsp;File&lt;/h3&gt;
&lt;p&gt;Cockpit now has a vagrant file. If you want to checkout the latest
Cockpit, test pull requests, or hack on Cockpit, you&amp;nbsp;can:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo vagrant up
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&amp;#8230; in a Cockpit git repo. There&amp;#8217;s a
&lt;a href="http://cockpit-project.org/blog/cockpit-vagrantfile.html"&gt;tutorial with more&amp;nbsp;information&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Testing with&amp;nbsp;libvirt&lt;/h3&gt;
&lt;p&gt;Dominik migrated the Cockpit integration tests to run on libvirt, rather
than using Qemu directly. This makes the tests more portable, and is an
important step towards running them&amp;nbsp;distributed.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Marius has done some work on configuring &lt;span class="caps"&gt;NTP&lt;/span&gt; servers. Hopefully this will
be in a release&amp;nbsp;soon:&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/aZ1Nm2ZkW3Q?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.79 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.79"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-7e1880ba02"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/sgallagh/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 21, 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.78 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.78.html" rel="alternate"></link><published>2015-09-30T21:23:00+00:00</published><updated>2015-09-30T21:23:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-09-30:/blog/cockpit-0.78.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.78&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.78&lt;/p&gt;
&lt;!--BREAK--&gt;

&lt;h3&gt;Multipath&amp;nbsp;Storage&lt;/h3&gt;
&lt;p&gt;Cockpit now deals with multipath storage, although it doesn&amp;#8217;t yet provide a way to set it&amp;nbsp;up.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/QPDUNpG7Z2o?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Cockpit&amp;nbsp;Guide&lt;/h3&gt;
&lt;p&gt;The Cockpit Guide has been updated and includes information about how
various features are implemented, and what sort of privileges they use
on the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;Here&amp;#8217;s a link to &lt;a href="http://cockpit-project.org/guide/latest/"&gt;the guide&lt;/a&gt; or you can take a look at
the &lt;a href="http://cockpit-project.org/guide/latest/privileges.html"&gt;privileges docs&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Compatibility with old&amp;nbsp;Cockpit&lt;/h3&gt;
&lt;p&gt;Recent releases of Cockpit had some compatibility issues when older servers were added to the dashboard, and vice versa. These have been fixed in&amp;nbsp;0.78&lt;/p&gt;
&lt;h3&gt;&lt;span class="caps"&gt;CPU&lt;/span&gt; usage&amp;nbsp;issue&lt;/h3&gt;
&lt;p&gt;A &lt;span class="caps"&gt;CPU&lt;/span&gt; usage bug in Cockpit 0.77 was&amp;nbsp;fixed.&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;future&lt;/h3&gt;
&lt;p&gt;Marius has done some really cool work on iSCSI. It&amp;#8217;s not yet in a Cockpit release, but take a peek&amp;nbsp;here:&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/N1Lw2OVLDoo?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.78 is available&amp;nbsp;now:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.78"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-977ba13a92"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/sgallagh/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 21, 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Cockpit 0.77 Released</title><link href="http://cockpit-project.org/blog/cockpit-0.77.html" rel="alternate"></link><published>2015-09-23T21:23:00+00:00</published><updated>2015-09-23T21:23:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-09-23:/blog/cockpit-0.77.html</id><summary type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.77&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit releases every week. This week it was&amp;nbsp;0.77&lt;/p&gt;
&lt;h3&gt;Componentizing&amp;nbsp;Cockpit&lt;/h3&gt;
&lt;p&gt;Marius and Stef completed a long running refactoring task of splitting
Cockpit into&amp;nbsp;components.&lt;/p&gt;
&lt;p&gt;In an age long gone Cockpit used to be one monolithic piece of &lt;span class="caps"&gt;HTML&lt;/span&gt; and
javascript. Over the last year we&amp;#8217;ve steadily refactored to split this
out so various components can be loaded optionally and/or from different
servers depending on capabilities and operating system&amp;nbsp;versions.&lt;/p&gt;
&lt;p&gt;Marius also removed a cockpitd DBus service that we&amp;#8217;ve also been moving
away from. Cockpit wants to talk to system APIs and not install its own
&lt;span class="caps"&gt;API&lt;/span&gt; wrappers like&amp;nbsp;cockpitd.&lt;/p&gt;
&lt;h3&gt;The URLs&amp;nbsp;changed&lt;/h3&gt;
&lt;p&gt;Because of the above, we unfortunately had to change the URLs. But we&amp;#8217;ve
taken the opportunity to make them a lot simpler and&amp;nbsp;cleaner.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/xLa4uRyGVrA?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Authentication when Embedding&amp;nbsp;Cockpit&lt;/h3&gt;
&lt;p&gt;Stef worked on partitioning the cockpit authentication so that embedders
of Cockpit components don&amp;#8217;t need to share authentication state with a
normal instance of Cockpit loaded in a&amp;nbsp;browser.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/xbxvEFXaIGw?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Deleting and Adjusting Kubernetes&amp;nbsp;Objects&lt;/h3&gt;
&lt;p&gt;Subin implemented deletion kubernetes objects, and adjust things like
the number of replicas in Replication&amp;nbsp;Controllers.&lt;/p&gt;
&lt;iframe width="640" height="480" src="https://www.youtube.com/embed/tiv9tIs4qkw?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;Warning when too many&amp;nbsp;machines&lt;/h3&gt;
&lt;p&gt;Cockpit now gives a warning when adding &amp;#8220;too many&amp;#8221; machines to the
dashboard. We&amp;#8217;ve set the warning to 20 machines, but various operating
systems can set this warning to be&amp;nbsp;lower.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot" src="https://trello-attachments.s3.amazonaws.com/55d623eddcb5795e8b5cff13/968x790/0e77b8ce653b79d29a2cc9de75b86b03/dc0c74d8-5e2f-11e5-91fc-901b633a059d.png"&gt;&lt;/p&gt;
&lt;h3&gt;From the&amp;nbsp;Future&lt;/h3&gt;
&lt;p&gt;Andreas did designs for managing the &lt;span class="caps"&gt;SSH&lt;/span&gt; keys loaded for use when connecting to&amp;nbsp;machines:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Wireframes" src="https://trello-attachments.s3.amazonaws.com/55f14b769262e42e89775936/3555x3301/0c0166255eaf092025c8a5c95f84f15f/ssh-keys-v2.png"&gt;&lt;/p&gt;
&lt;h3&gt;Try it&amp;nbsp;out&lt;/h3&gt;
&lt;p&gt;Cockpit 0.77 is available now&amp;nbsp;here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/cockpit-project/cockpit/releases/tag/0.77"&gt;Source&amp;nbsp;Tarball&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bodhi.fedoraproject.org/updates/FEDORA-2015-16557"&gt;Fedora 23 and Fedora&amp;nbsp;Rawhide&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://copr.fedoraproject.org/coprs/sgallagh/cockpit-preview/"&gt;&lt;span class="caps"&gt;COPR&lt;/span&gt; for Fedora 21, 22, CentOS and &lt;span class="caps"&gt;RHEL&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="technical"></category></entry><entry><title>Making REST calls from Javascript in Cockpit</title><link href="http://cockpit-project.org/blog/making-rest-calls-from-javascript-in-cockpit.html" rel="alternate"></link><published>2015-07-10T00:00:00+00:00</published><updated>2015-07-10T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-07-10:/blog/making-rest-calls-from-javascript-in-cockpit.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. In &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;earlier&lt;/a&gt; &lt;a href="http://cockpit-project.org/blog/using-dbus-from-javascript-in-cockpit.html"&gt;tutorials&lt;/a&gt; there&amp;#8217;s a guide on how to add components to&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;p&gt;Not all of the &lt;a href="http://cockpit-project.org/blog/d-bus-is-powerful-ipc.html"&gt;system APIs use DBus&lt;/a&gt;. So sometimes we find ourselves in a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. In &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;earlier&lt;/a&gt; &lt;a href="http://cockpit-project.org/blog/using-dbus-from-javascript-in-cockpit.html"&gt;tutorials&lt;/a&gt; there&amp;#8217;s a guide on how to add components to&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;p&gt;Not all of the &lt;a href="http://cockpit-project.org/blog/d-bus-is-powerful-ipc.html"&gt;system APIs use DBus&lt;/a&gt;. So sometimes we find ourselves in a situation where we have to use &lt;span class="caps"&gt;REST&lt;/span&gt; (which is often just treated as another word for &lt;span class="caps"&gt;HTTP&lt;/span&gt;) to talk to certain parts of the system. For example &lt;a href="https://docs.docker.com/reference/api/docker_remote_api/"&gt;Docker has a &lt;span class="caps"&gt;REST&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For this tutorial you&amp;#8217;ll need at least Cockpit 0.58. There was one last tweak that helped with the &lt;code&gt;superuser&lt;/code&gt; option you see below. You can install it in &lt;a href="http://cockpit-project.org/running.html"&gt;Fedora 22&lt;/a&gt; or &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/HACKING.md"&gt;build it from git&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here we&amp;#8217;ll make a package called &lt;em&gt;docker-info&lt;/em&gt; which shows info about the docker daemon. We use the &lt;code&gt;/info&lt;/code&gt; &lt;a href="https://docs.docker.com/reference/api/docker_remote_api_v1.18/#display-system-wide-information"&gt;docker &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; to retrieve that&amp;nbsp;info.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve prepared the &lt;a href="http://cockpit-project.org/files/docker-info.tgz"&gt;docker-info package here&lt;/a&gt;. It&amp;#8217;s just two files. To download them and extract to your current directory, and installs it as a Cockpit&amp;nbsp;package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget http://cockpit-project.org/files/docker-info.tgz -O - | tar -xzf -
$ cd docker-info/
$ mkdir -p ~/.local/share/cockpit
$ ln -snf $PWD ~/.local/share/cockpit/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Previously we &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;talked about&lt;/a&gt; how packages are installed, and what &lt;code&gt;manifest.json&lt;/code&gt; does so I won&amp;#8217;t repeat myself here. But to make sure the above worked correctly, you can run the following command. You should see &lt;code&gt;docker-info&lt;/code&gt; listed in the&amp;nbsp;output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cockpit-bridge --packages
...
docker-info: .../.local/share/cockpit/docker-info
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you&amp;#8217;re logged into Cockpit on this machine, first log out. And log in again. Make sure to log into Cockpit with your current user name, since you installed the package in your home directory. You should now see a new item in the &lt;em&gt;Tools&lt;/em&gt; menu called &lt;em&gt;Docker Info&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Docker Info tool" src="images/cockpit-docker-info.png"&gt;&lt;/p&gt;
&lt;p&gt;After a moment, you should see numbers pop up with some stats about the docker daemon. Now in a terminal try to run something&amp;nbsp;like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo docker run -ti fedora /bin/bash
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should see the numbers update as the container is pulled and started. When you type &lt;code&gt;exit&lt;/code&gt; in the container, you should see the numbers update again. How is this happening? Lets take a look at the &lt;code&gt;docker-info&lt;/code&gt; &lt;span class="caps"&gt;HTML&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Docker Info&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container-fluid&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Docker Daemon Info&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h2&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Total Memory: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;docker-memory&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;?&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Go Routines: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;docker-routines&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;?&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;File Descriptors: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;docker-files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;?&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Containers: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;docker-containers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;?&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Images: &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;docker-images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;?&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;ul&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;docker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cockpit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/run/docker.sock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;superuser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;try&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;retrieve_info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;docker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process_info&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;print_failure&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;process_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-memory&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MemTotal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-routines&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NGoroutines&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NFd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-containers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Containers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Images&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="cm"&gt;/* First time */&lt;/span&gt;
        &lt;span class="nx"&gt;retrieve_info&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;events&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;docker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/events&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;got_event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;always&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;print_failure&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;got_event&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;retrieve_info&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;print_failure&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ex&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First we include &lt;code&gt;jquery.js&lt;/code&gt; and &lt;code&gt;cockpit.js&lt;/code&gt;. &lt;code&gt;cockpit.js&lt;/code&gt; defines the basic &lt;span class="caps"&gt;API&lt;/span&gt; for interacting with the system, as well as Cockpit itself. You can find &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html"&gt;detailed documentation here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also include the cockpit.css file to make sure the look of our tool matches that of Cockpit. The &lt;span class="caps"&gt;HTML&lt;/span&gt; is pretty basic, defining a little list where the info&amp;nbsp;shown.&lt;/p&gt;
&lt;p&gt;In the javascript code, first we setup an &lt;span class="caps"&gt;HTTP&lt;/span&gt; client to access docker. Docker listens for &lt;span class="caps"&gt;HTTP&lt;/span&gt; requests on a Unix socket called &lt;code&gt;/var/run/docker.sock&lt;/code&gt;. In addition the permissions on that socket often require escalated privileges to access, so we tell Cockpit to try to gain &lt;code&gt;superuser&lt;/code&gt; privileges for this task, but continue anyway if it&amp;nbsp;cannot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;docker&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cockpit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;http&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/var/run/docker.sock&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;superuser&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;try&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First we define how to retrieve info from Docker. We use the &lt;span class="caps"&gt;REST&lt;/span&gt; &lt;code&gt;/info&lt;/code&gt; &lt;span class="caps"&gt;API&lt;/span&gt; to do&amp;nbsp;this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;retrieve_info() {&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;docker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;process_info&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;print_failure&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In a browser you cannot stop and wait until a &lt;span class="caps"&gt;REST&lt;/span&gt; call completes. Anything that doesn&amp;#8217;t happen instantaneously gets its results reported back to you by &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#cockpit-http-done"&gt;means of callback handlers&lt;/a&gt;. jQuery has a standard interface &lt;a href="http://api.jquery.com/deferred.promise/"&gt;called a promise&lt;/a&gt;. You add handlers by calling the &lt;code&gt;.done()&lt;/code&gt; or &lt;code&gt;.fail()&lt;/code&gt; methods and registering&amp;nbsp;callbacks.&lt;/p&gt;
&lt;p&gt;The result of the &lt;code&gt;/info&lt;/code&gt; call is &lt;span class="caps"&gt;JSON&lt;/span&gt;, and we process it here. This is standard jQuery for filling in text data into the various&amp;nbsp;elements:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;process_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-memory&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;MemTotal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-routines&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NGoroutines&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-files&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;NFd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-containers&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Containers&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#docker-images&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;resp&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Images&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then we trigger the invocation of our &lt;code&gt;/info&lt;/code&gt; &lt;span class="caps"&gt;REST&lt;/span&gt; &lt;span class="caps"&gt;API&lt;/span&gt;&amp;nbsp;call.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cm"&gt;/* First time */&lt;/span&gt;
&lt;span class="nx"&gt;retrieve_info&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Because we want to react to changes in Docker state, we also start a long request to its &lt;code&gt;/events&lt;/code&gt; &lt;span class="caps"&gt;API&lt;/span&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;events&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;docker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/events&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;.get("/events")&lt;/code&gt; call returns a jQuery Promise. When a line of event data arrives, the &lt;code&gt;.stream()&lt;/code&gt; callback in invoked, and we use it to trigger a reload of the Docker&amp;nbsp;info.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;got_event&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;always&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;print_failure&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;got_event&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;retrieve_info&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is a simple example, but I hope it helps you get started. There are further &lt;span class="caps"&gt;REST&lt;/span&gt; &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-http"&gt;javascript calls&lt;/a&gt;. Obviously you can also do &lt;code&gt;POST&lt;/code&gt; and so&amp;nbsp;on.&lt;/p&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit’s Kubernetes Dashboard</title><link href="http://cockpit-project.org/blog/cockpit-kubernetes-dashboard.html" rel="alternate"></link><published>2015-06-09T23:51:00+00:00</published><updated>2015-06-09T23:51:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-06-09:/blog/cockpit-kubernetes-dashboard.html</id><summary type="html">&lt;p&gt;Here&amp;#8217;s a video showing what I&amp;#8217;ve been working on together with some help from a couple Cockpit folks. It&amp;#8217;s a &lt;a href="http://cockpit-project.org"&gt;Cockpit&lt;/a&gt; dashboard for&amp;nbsp;Kubernetes.&lt;/p&gt;
&lt;p&gt;If you haven&amp;#8217;t heard about &lt;a href="http://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; &amp;#8230; it&amp;#8217;s a way to schedule docker containers across a cluster of machines, and take care …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here&amp;#8217;s a video showing what I&amp;#8217;ve been working on together with some help from a couple Cockpit folks. It&amp;#8217;s a &lt;a href="http://cockpit-project.org"&gt;Cockpit&lt;/a&gt; dashboard for&amp;nbsp;Kubernetes.&lt;/p&gt;
&lt;p&gt;If you haven&amp;#8217;t heard about &lt;a href="http://kubernetes.io/"&gt;Kubernetes&lt;/a&gt; &amp;#8230; it&amp;#8217;s a way to schedule docker containers across a cluster of machines, and take care of their networking, storage, name resolution etc. It&amp;#8217;s not completely baked, but pretty cool when it&amp;nbsp;works.&lt;/p&gt;
&lt;iframe src="http://www.youtube.com/embed/Fcfsu22RssU" html5=1 frameborder="0" height="450" width="800" type="text/html"&gt;
&lt;/iframe&gt;

&lt;p&gt;The Cockpit dashboard you see in the video isn&amp;#8217;t done by any means &amp;#8230; there&amp;#8217;s a lot missing. But I&amp;#8217;m pretty happy with what we have so far. I&amp;#8217;m using Cockpit 0.61 in the demo. There are some nagging details to make things work, but hopefully we can solve them later. The Nulecule support isn&amp;#8217;t merged yet, &lt;a href="https://github.com/cockpit-project/cockpit/pull/2332"&gt;Subin has been working on it&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Cockpit dashboard actually mostly works with &lt;a href="https://github.com/openshift/origin"&gt;Openshift v3&lt;/a&gt;. Openshift v3 is based on Kubernetes underneath, which makes apps that are developed there really&amp;nbsp;portable.&lt;/p&gt;</content><category term="cockpit"></category><category term="technical"></category><category term="kubernetes"></category></entry><entry><title>Protocol for Web access to System APIs</title><link href="http://cockpit-project.org/blog/protocol-for-web-access-to-system-apis.html" rel="alternate"></link><published>2014-12-16T00:00:00+00:00</published><updated>2014-12-16T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-12-16:/blog/protocol-for-web-access-to-system-apis.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.48 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A Linux system today has a lot of local system configuration APIs. I&amp;#8217;m not talking about library APIs here, but things like DBus services, command/scripts to be executed, or files placed in various locations …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.48 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A Linux system today has a lot of local system configuration APIs. I&amp;#8217;m not talking about library APIs here, but things like DBus services, command/scripts to be executed, or files placed in various locations. All of these constitute the &lt;span class="caps"&gt;API&lt;/span&gt; by which we configure a Linux system. In &lt;a href="http://cockpit-project.org"&gt;Cockpit&lt;/a&gt; we access these APIs from a web browser (after authentication of&amp;nbsp;course).&lt;/p&gt;
&lt;p&gt;How do we access the system APIs? The answer is the &lt;code&gt;cockpit-bridge&lt;/code&gt; tool. It proxies requests from the Cockpit user interface, running in a web browser, to the system. Typically the &lt;code&gt;cockpit-bridge&lt;/code&gt; runs as the logged in user, in a user session. It has similar permissions and capabilities as if you had used &lt;code&gt;ssh&lt;/code&gt; to log into the&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;Lets look at an example DBus &lt;span class="caps"&gt;API&lt;/span&gt; that we call from Cockpit. systemd has an &lt;span class="caps"&gt;API&lt;/span&gt; to set the system host name, called &lt;a href="http://www.freedesktop.org/wiki/Software/systemd/hostnamed/"&gt;SetStaticHostname&lt;/a&gt;. In Cockpit we can invoke that &lt;span class="caps"&gt;API&lt;/span&gt; using simple &lt;span class="caps"&gt;JSON&lt;/span&gt; like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
  &amp;quot;call&amp;quot;: [
    &amp;quot;/org/freedesktop/hostname1&amp;quot;,
    &amp;quot;org.freedesktop.hostname1&amp;quot;,
    &amp;quot;SetStaticHostname&amp;quot;, [ &amp;quot;mypinkpony.local&amp;quot;, true ]
  ]
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The protocol that the web browser uses is a &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/doc/protocol.md"&gt;message based protocol&lt;/a&gt;, and runs over a &lt;a href="http://en.wikipedia.org/wiki/WebSocket"&gt;WebSocket&lt;/a&gt;. This is a &amp;#8220;post-&lt;span class="caps"&gt;HTTP&lt;/span&gt;&amp;#8221; protocol, and isn&amp;#8217;t limited by the request/response semantics inherent to &lt;span class="caps"&gt;HTTP&lt;/span&gt;. Our protocol has a lot of &lt;span class="caps"&gt;JSON&lt;/span&gt;, and has a number of interesting characteristics, which you&amp;#8217;ll see below. In general we&amp;#8217;ve tried to keep this protocol readable and&amp;nbsp;debuggable.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;cockpit-bridge&lt;/code&gt; tool speaks this protocol on its standard in and standard output. The &lt;code&gt;cockpit-ws&lt;/code&gt; process hosts the WebSocket and passes the messages to &lt;code&gt;cockpit-bridge&lt;/code&gt; for&amp;nbsp;processing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Following along:&lt;/strong&gt; In order to follow along with the stuff below, you&amp;#8217;ll need at least Cockpit 0.48. The protocol is not yet frozen, and we merged some cleanup recently. You can install it on &lt;a href="https://lists.fedorahosted.org/pipermail/cockpit-devel/2014-November/000196.html"&gt;Fedora 21 using a &lt;span class="caps"&gt;COPR&lt;/span&gt;&lt;/a&gt; or &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/HACKING.md"&gt;build it from git&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Channels&lt;/h2&gt;
&lt;p&gt;Cockpit can be doing lots of things at the same time and we don&amp;#8217;t want to have to open a new WebSocket each time. So we allow the protocol to be shared by multiple concurrent tasks. Each of these is assigned a &lt;em&gt;channel&lt;/em&gt;. Channels have a string identifier. The data transferred in a channel is called the payload. To combine these into a message I simply concatenate the identifier, a new line, and the payload. Lets say I wanted to send the message &lt;code&gt;Oh marmalade!&lt;/code&gt; over the channel called &lt;code&gt;scruffy&lt;/code&gt; the message would look like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scruffy
Oh marmalade!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;How do we know what channel to send messages on? We send &lt;em&gt;control messages&lt;/em&gt; on a &lt;em&gt;control channel&lt;/em&gt; to open other channels, and indicate what they should do. The identifier for the control channel is an empty string. More on that&amp;nbsp;below.&lt;/p&gt;
&lt;h2&gt;Framing&lt;/h2&gt;
&lt;p&gt;In order to pass a message based protocol over a plain stream, such the standard in and standard out of &lt;code&gt;cockpit-bridge&lt;/code&gt;, one needs some form of framing. This framing is not used when the messages are passed over a WebSocket, since WebSockets inherently have a message&amp;nbsp;concept.&lt;/p&gt;
&lt;p&gt;The framing the &lt;code&gt;cockpit-bridge&lt;/code&gt; uses is simply the byte length of the message, encoded as a string, and followed by a new line. So Scruffy&amp;#8217;s 21 byte message above, when sent over a stream, would like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;21
scruffy
Oh marmalade!
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Alternatively, when debugging or testing &lt;code&gt;cockpit-bridge&lt;/code&gt; you can run in an interactive mode, where we frame our messages by using boundaries. That way we don&amp;#8217;t have to count the byte length of all of our messages meticulously, if we&amp;#8217;re writing them by hand. We specify the boundary when invoking &lt;code&gt;cockpit-bridge&lt;/code&gt; like&amp;nbsp;so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cockpit-bridge --interact=----
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And then we can send a message by using the &lt;code&gt;----&lt;/code&gt; boundary on a line by&amp;nbsp;itself:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;scruffy
Oh marmalade!
----
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Control&amp;nbsp;channels&lt;/h2&gt;
&lt;p&gt;Before we can use a channel, we need to tell &lt;code&gt;cockpit-bridge&lt;/code&gt; about the channel and what that channel is meant to do. We do this with a &lt;em&gt;control message&lt;/em&gt; sent on the &lt;em&gt;control channel&lt;/em&gt;. The &lt;em&gt;control channel&lt;/em&gt; is a channel with an empty string as an identifier. Each control message is a &lt;span class="caps"&gt;JSON&lt;/span&gt; object, or dict. Each control message has a &lt;code&gt;"command"&lt;/code&gt; field, which determines what kind of control message it&amp;nbsp;is.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;"open"&lt;/code&gt; control message opens a new channel. The &lt;code&gt;"payload"&lt;/code&gt; field indicates the type of the channel, so that &lt;code&gt;cockpit-bridge&lt;/code&gt; knows what to do with the messages. The various &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/doc/protocol.md"&gt;channel types are documented&lt;/a&gt;. Some channels connect talk to a DBus service, others spawn a process,&amp;nbsp;etc.&lt;/p&gt;
&lt;p&gt;When you send an &lt;code&gt;"open"&lt;/code&gt; you also choose a new channel identifier and place it in the &lt;code&gt;"channel"&lt;/code&gt; field. This channel identifier must not already be in&amp;nbsp;use.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;"echo"&lt;/code&gt; channel type just sends the messages you send to the &lt;code&gt;cockpit-bridge&lt;/code&gt; back to you. Here&amp;#8217;s the control message that is used to open an echo channel. Note the empty channel identifier on the first&amp;nbsp;line:&lt;/p&gt;
&lt;pre&gt;

{
  "command": "open",
  "channel": "mychannel",
  "payload": "echo"
}
&lt;/pre&gt;

&lt;p&gt;Now we&amp;#8217;re ready to play &amp;#8230; Well&amp;nbsp;almost.&lt;/p&gt;
&lt;p&gt;The very first control message sent to and from &lt;code&gt;cockpit-bridge&lt;/code&gt; shuld be an &lt;code&gt;"init"&lt;/code&gt; message containing a version number. That version number is &lt;code&gt;1&lt;/code&gt; for the forseeable&amp;nbsp;future.&lt;/p&gt;
&lt;pre&gt;

{
  "command": "init",
  "version": 1
}
&lt;/pre&gt;

&lt;h2&gt;Try it&amp;nbsp;out&lt;/h2&gt;
&lt;p&gt;So combining our knowledge so far, we can run the&amp;nbsp;following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cockpit-bridge --interact=----
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this debugging mode sent by &lt;code&gt;cockpit-bridge&lt;/code&gt; will be bold in your terminal. Now paste the following&amp;nbsp;in:&lt;/p&gt;
&lt;pre&gt;

{ "command": "open", "channel": "mychannel", "payload": "echo" }
----
mychannel
This is a test
----
&lt;/pre&gt;

&lt;p&gt;You&amp;#8217;ll notice that &lt;code&gt;cockpit-bridge&lt;/code&gt; sends your message back. You can use this tecnique to experiment. Unfortunately
&lt;code&gt;cockpit-bridge&lt;/code&gt; exits immediately when it&amp;#8217;s stdin closes, so you &lt;a href="https://github.com/cockpit-project/cockpit/issues/1594"&gt;can&amp;#8217;t yet use shell redirection from a file effectively&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Making a DBus method&amp;nbsp;call&lt;/h2&gt;
&lt;p&gt;To make a DBus method call, we open a channel with the payload type &lt;code&gt;"dbus-json3"&lt;/code&gt;. Then we send &lt;span class="caps"&gt;JSON&lt;/span&gt; messages as payloads inside that channel. An additional field in the &lt;code&gt;"open"&lt;/code&gt; control message is required. The &lt;code&gt;"name"&lt;/code&gt; field is the bus name of the DBus service we want to talk&amp;nbsp;to:&lt;/p&gt;
&lt;pre&gt;

{
  "command": "open",
  "channel": "mydbus",
  "payload": "dbus-json3",
  "name": "org.freedesktop.systemd1"
}
&lt;/pre&gt;

&lt;p&gt;Once the channel is open we send a &lt;span class="caps"&gt;JSON&lt;/span&gt; object as a payload in the channel with a &lt;code&gt;"call"&lt;/code&gt; field. It is set to an array with the DBus interface, DBus object path, method name, and an array of&amp;nbsp;arguments.&lt;/p&gt;
&lt;pre&gt;
mydbus
{
  "call": [ "/org/freedesktop/hostname1", "org.freedesktop.hostname1",
            "SetStaticHostname", [ "mypinkpony.local", true ] ],
  "id": "cookie"
}
&lt;/pre&gt;

&lt;p&gt;If we want a reply from the service we specify an &lt;code&gt;"id"&lt;/code&gt; field. The resulting &lt;code&gt;"reply"&lt;/code&gt; will have a matching &lt;code&gt;"id"&lt;/code&gt; and would look something like&amp;nbsp;this:&lt;/p&gt;
&lt;pre&gt;
mydbus
{
  "reply": [ null ],
  "id": "cookie"
}
&lt;/pre&gt;

&lt;p&gt;If an error occured you would see a reply like&amp;nbsp;this:&lt;/p&gt;
&lt;pre&gt;
mydbus
{
  "error": [
    "org.freedesktop.DBus.Error.UnknownMethod",
    [ "MyMethodName not available"]
  ],
  "id":"cookie"
}
&lt;/pre&gt;

&lt;p&gt;This is just the basics. You can do much more than this with DBus, including watching for signals, lookup up properties, tracking when they change, introspecting services, watching for new objects to show up, and so&amp;nbsp;on.&lt;/p&gt;
&lt;h2&gt;Spawning a&amp;nbsp;process&lt;/h2&gt;
&lt;p&gt;Spawning a process is easier than calling a DBus method. You open the channel with the payload type &lt;code&gt;"stream"&lt;/code&gt; and you specify the process you would like to spawn in the &lt;code&gt;"open"&lt;/code&gt; control&amp;nbsp;message:&lt;/p&gt;
&lt;pre&gt;

{
  "command": "open",
  "channel": "myproc",
  "payload": "stream",
  "spawn": [ "ip", "addr", "show" ]
}
&lt;/pre&gt;

&lt;p&gt;The process will send its output in the payload of one or more messages of the &lt;code&gt;"myproc"&lt;/code&gt; channel, and at the end you&amp;#8217;ll encounter the &lt;code&gt;"close"&lt;/code&gt; control message. We haven&amp;#8217;t looked at until now. A &lt;code&gt;"close"&lt;/code&gt; control message is sent when a channel closes. Either the &lt;code&gt;cockpit-bridge&lt;/code&gt; or its caller can send this message to close a channel. Often the &lt;code&gt;"close"&lt;/code&gt; message contains additional information, such as a problem encountered, or in this case the exit status of the&amp;nbsp;process:&lt;/p&gt;
&lt;pre&gt;

{
  "command": "close",
  "channel": "myproc",
  "exit-status": 0
}
&lt;/pre&gt;

&lt;h2&gt;Doing it over a&amp;nbsp;WebSocket&lt;/h2&gt;
&lt;p&gt;Obviously in Cockpit we send all of these messages from the browser through a WebSocket hosted by &lt;code&gt;cockpit-ws&lt;/code&gt;. &lt;code&gt;cockpit-ws&lt;/code&gt; then passes them on to &lt;code&gt;cockpit-bridge&lt;/code&gt;. You can communicate this way too, if you &lt;a href="http://cockpit-project.org/guide/cockpit.conf.5.html"&gt;configure Cockpit to accept different Websocket Origins&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;And on it&amp;nbsp;goes&lt;/h2&gt;
&lt;p&gt;There are payload types for reading files, replacing them, connecting to unix sockets, accessing system resource metrics, doing local &lt;span class="caps"&gt;HTTP&lt;/span&gt; requests, and more. Once the protocol is stable, solid documentation is in&amp;nbsp;order.&lt;/p&gt;
&lt;p&gt;I hope that this has given some insight into how Cockpit works under the hood. If you&amp;#8217;re interested in using this same protocol, I&amp;#8217;d love to get feedback &amp;#8230; especially while the basics of the protocol are not yet&amp;nbsp;frozen.&lt;/p&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit on RHEL Atomic Beta</title><link href="http://cockpit-project.org/blog/cockpit-on-rhel-atomic-beta.html" rel="alternate"></link><published>2014-11-20T00:00:00+00:00</published><updated>2014-11-20T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-11-20:/blog/cockpit-on-rhel-atomic-beta.html</id><summary type="html">&lt;p&gt;If you&amp;#8217;ve tried out the &lt;a href="http://developerblog.redhat.com/2014/11/11/red-hat-enterprise-linux-7-atomic-host-beta-now-available/"&gt;&lt;span class="caps"&gt;RHEL&lt;/span&gt; Atomic Host Beta&lt;/a&gt; you might notice that Cockpit is not included by default, like it is in the Fedora Atomic or CentOS Atomic. But there&amp;#8217;s an easy work&amp;nbsp;around:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo docker run --privileged -v /:/host -d stefwalter/cockpit-atomic:wip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is an …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you&amp;#8217;ve tried out the &lt;a href="http://developerblog.redhat.com/2014/11/11/red-hat-enterprise-linux-7-atomic-host-beta-now-available/"&gt;&lt;span class="caps"&gt;RHEL&lt;/span&gt; Atomic Host Beta&lt;/a&gt; you might notice that Cockpit is not included by default, like it is in the Fedora Atomic or CentOS Atomic. But there&amp;#8217;s an easy work&amp;nbsp;around:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo docker run --privileged -v /:/host -d stefwalter/cockpit-atomic:wip
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is an interim solution, and has some&amp;nbsp;drawbacks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only really allows Cockpit to be used as&amp;nbsp;root.&lt;/li&gt;
&lt;li&gt;The Storage and user accounts UIs don&amp;#8217;t&amp;nbsp;work.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And in general privileged containers are a mixed bag. They&amp;#8217;re not portable, and really not containers at all, in the sense that they&amp;#8217;re not contained.  But this is an easy way to get Cockpit going on &lt;span class="caps"&gt;RHEL&lt;/span&gt; Atomic for the time&amp;nbsp;being.&lt;/p&gt;</content><category term="cockpit"></category><category term="linux"></category><category term="rhel"></category><category term="atomic"></category></entry><entry><title>Creating Plugins for the Cockpit User Interface</title><link href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html" rel="alternate"></link><published>2014-11-13T00:00:00+00:00</published><updated>2014-11-13T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-11-13:/blog/creating-plugins-for-the-cockpit-user-interface.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. And you can add stuff to that user interface. Cockpit is internally built of various components. Each component is &lt;span class="caps"&gt;HTML&lt;/span&gt;, with Javascript logic that makes it work, and &lt;span class="caps"&gt;CSS …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. And you can add stuff to that user interface. Cockpit is internally built of various components. Each component is &lt;span class="caps"&gt;HTML&lt;/span&gt;, with Javascript logic that makes it work, and &lt;span class="caps"&gt;CSS&lt;/span&gt; to make it&amp;nbsp;pretty.&lt;/p&gt;
&lt;p&gt;It&amp;#8217;s real easy to create these components. Tools are components that show up in the &lt;em&gt;Tools&lt;/em&gt; menu in&amp;nbsp;Cockpit:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tools menu" src="images/cockpit-tools-default.png"&gt;&lt;/p&gt;
&lt;p&gt;For example the &lt;em&gt;Terminal&lt;/em&gt; that you see there is implemented as a tool. But lets make ourselves another one. For this tutorial you&amp;#8217;ll need Cockpit 0.41. You can install it in &lt;a href="https://lists.fedorahosted.org/pipermail/cockpit-devel/2014-November/000196.html"&gt;Fedora 21&lt;/a&gt; or &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/HACKING.md"&gt;build it from git&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So break out your terminal, lets make a package called &lt;em&gt;pinger&lt;/em&gt; that checks whether your server has network connectivity to the Internet by pinging another host. Nothing too fancy. We&amp;#8217;ll just be spawning a process on the server to do the work. I&amp;#8217;ve prepared it for you as &lt;a href="http://cockpit-project.org/files/pinger.tgz"&gt;an example here&lt;/a&gt;, and we can look it over, and modify it. To download the example to your current&amp;nbsp;directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget http://cockpit-project.org/files/pinger.tgz -O - | tar -xzf -
$ cd pinger/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Components, and more specifically their &lt;span class="caps"&gt;HTML&lt;/span&gt; and Javascript files, live in package directories. In the package directory there&amp;#8217;s also a &lt;code&gt;manifest.json&lt;/code&gt; file which tells Cockpit about the package. The &lt;code&gt;pinger&lt;/code&gt; directory above is such a package. It&amp;#8217;s &lt;code&gt;manifest.json&lt;/code&gt; file looks like&amp;nbsp;this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;{
    &amp;quot;version&amp;quot;: 0,
    &amp;quot;tools&amp;quot;: {
        &amp;quot;pinger&amp;quot;: {
            &amp;quot;label&amp;quot;: &amp;quot;Pinger&amp;quot;,
            &amp;quot;path&amp;quot;: &amp;quot;ping.html&amp;quot;
        }
    },
    &amp;quot;content-security-policy&amp;quot;: &amp;quot;default-src &amp;#39;self&amp;#39; &amp;#39;unsafe-inline&amp;#39; &amp;#39;unsafe-eval&amp;#39;&amp;quot;
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The manifest above has a &lt;code&gt;"tools"&lt;/code&gt; subsection. Each tool is listed in the &lt;em&gt;Tools&lt;/em&gt; menu by Cockpit. The &lt;code&gt;"path"&lt;/code&gt; is the name of the &lt;span class="caps"&gt;HTML&lt;/span&gt; file that implements the tool, and the &lt;code&gt;"label"&lt;/code&gt; is the text to show in the &lt;em&gt;Tools&lt;/em&gt;&amp;nbsp;menu.&lt;/p&gt;
&lt;p&gt;You&amp;#8217;ll notice that we haven&amp;#8217;t told Cockpit about the package yet. To do so you either place or symlink the package into one of two&amp;nbsp;places:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~/.local/share/cockpit&lt;/code&gt;&lt;br&gt;
In your home directory, for user specific packages, and ones that you&amp;#8217;re working on. You can edit these on the fly and just refresh your browser to see&amp;nbsp;changes.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/share/cockpit&lt;/code&gt;&lt;br&gt;
For installed packages available to all users. These should not be changed while Cockpit is&amp;nbsp;running.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since we&amp;#8217;re going to be messing around with this package, lets symlink it into the former&amp;nbsp;location.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkdir -p ~/.local/share/cockpit
$ ln -snf $PWD ~/.local/share/cockpit/pinger
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You can list which Cockpit packages are installed using the following command, and you should see &lt;code&gt;pinger&lt;/code&gt; listed among&amp;nbsp;them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cockpit-bridge --packages
...
pinger: /home/.../.local/share/cockpit/pinger
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you&amp;#8217;re logged into Cockpit on this machine, first log out. And log in again. Make sure to log into Cockpit with your current user name, since you installed the package in your home directory. You should now see a new item in the &lt;em&gt;Tools&lt;/em&gt;&amp;nbsp;menu:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Tools menu with pinger" src="images/cockpit-tools-pinger.png"&gt;&lt;/p&gt;
&lt;p&gt;The pinger tool itself looks like&amp;nbsp;this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pinger tool" src="images/cockpit-pinger-tool.png"&gt;&lt;/p&gt;
&lt;p&gt;Lets take a look at the pinger &lt;span class="caps"&gt;HTML&lt;/span&gt;, and see how it&amp;nbsp;works.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Pinger&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container-fluid&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;max-width: 400px&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cockpit-form-table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Address&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;address&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;8.8.8.8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-primary&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;ping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Ping&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;result&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;p&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#address&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;output&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#output&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#result&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#ping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ping_run&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ping_run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;proc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cockpit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;()]);&lt;/span&gt;
            &lt;span class="nx"&gt;proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ping_success&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ping_output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ping_fail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

            &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
            &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ping_success&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;green&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;result&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;success&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ping_fail&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;css&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;color&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;red&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fail&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ping_output&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;output&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;document&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;createTextNode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;/html&gt;&lt;/p&gt;
&lt;p&gt;First we include &lt;code&gt;jquery.js&lt;/code&gt; and &lt;code&gt;cockpit.js&lt;/code&gt;. &lt;code&gt;cockpit.js&lt;/code&gt; defines the basic &lt;span class="caps"&gt;API&lt;/span&gt; for interacting with the system, as well as Cockpit itself. You can find &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html"&gt;detailed documentation here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also include the cockpit.css file to make sure the look of our tool matches that of Cockpit. The &lt;span class="caps"&gt;HTML&lt;/span&gt; is pretty basic, defining a little form with a field to type an address, a button to click to start the pinging, and an area to present output and&amp;nbsp;results.&lt;/p&gt;
&lt;p&gt;In the javascript code, first we get a bunch of variables pointing to the &lt;span class="caps"&gt;HTML&lt;/span&gt; elements we want to interact with.
Next we attach a handler to the &lt;em&gt;Ping&lt;/em&gt; button so that the &lt;code&gt;ping_run()&lt;/code&gt; function is called when it is&amp;nbsp;clicked.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#ping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;ping_run&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;ping_run&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the &lt;code&gt;ping_run()&lt;/code&gt; function is where the magic happens. &lt;code&gt;cockpit.spawn&lt;/code&gt; is a function, &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-spawn"&gt;documented here&lt;/a&gt; that lets you spawn processes on the server and interact with them via stdin and stdout. Here we spawn the &lt;code&gt;ping&lt;/code&gt; command with some&amp;nbsp;arguments:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;proc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cockpit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ping&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;4&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;address&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;()]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In a web browser you cannot block and wait until a method call completes. Anything that doesn&amp;#8217;t happen instantaneously gets its results reported back to you by &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-spawn-done"&gt;means of callback handlers&lt;/a&gt;. jQuery has a standard interface &lt;a href="http://api.jquery.com/deferred.promise/"&gt;called a promise&lt;/a&gt;. You add handlers by calling the &lt;code&gt;.done()&lt;/code&gt; or &lt;code&gt;.fail()&lt;/code&gt; methods and registering callbacks. &lt;code&gt;proc.stream()&lt;/code&gt; registers a callback to be invoked whenever the process produces&amp;nbsp;output.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="nx"&gt;proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ping_success&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ping_output&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;proc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ping_fail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;ping_success()&lt;/code&gt; and &lt;code&gt;ping_fail()&lt;/code&gt; and &lt;code&gt;ping_output()&lt;/code&gt; update the display as you would&amp;nbsp;expect.&lt;/p&gt;
&lt;p&gt;So there you go &amp;#8230; it&amp;#8217;s a simple plugin to start off with &amp;#8230; next time we&amp;#8217;ll cover &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-dbus"&gt;how to use DBus&lt;/a&gt;, and then the real fun&amp;nbsp;begins.&lt;/p&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Using DBus from Javascript in Cockpit</title><link href="http://cockpit-project.org/blog/using-dbus-from-javascript-in-cockpit.html" rel="alternate"></link><published>2014-11-13T00:00:00+00:00</published><updated>2014-11-13T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-11-13:/blog/using-dbus-from-javascript-in-cockpit.html</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. As we covered in the &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;last tutorial&lt;/a&gt; you can add user interface component to Cockpit, and build your own parts of the Server &lt;span class="caps"&gt;UI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Much of Cockpit interacts with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. As we covered in the &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;last tutorial&lt;/a&gt; you can add user interface component to Cockpit, and build your own parts of the Server &lt;span class="caps"&gt;UI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Much of Cockpit interacts with the server using DBus. We have a powerful yet simple &lt;span class="caps"&gt;API&lt;/span&gt; for doing that, and you should use DBus too when building your own Cockpit user interfaces. For this tutorial you&amp;#8217;ll need at least Cockpit 0.41. A few tweaks landed in that release to solve a couple rough edges we had in our DBus support. You can install it in &lt;a href="https://lists.fedorahosted.org/pipermail/cockpit-devel/2014-November/000196.html"&gt;Fedora 21&lt;/a&gt; or &lt;a href="https://github.com/cockpit-project/cockpit/blob/master/HACKING.md"&gt;build it from git&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here we&amp;#8217;ll make a package called &lt;em&gt;zoner&lt;/em&gt; which lets you set the time zone of your server. We use the systemd &lt;a href="http://www.freedesktop.org/wiki/Software/systemd/timedated/"&gt;timedated DBus &lt;span class="caps"&gt;API&lt;/span&gt;&lt;/a&gt; to do actually switch time&amp;nbsp;zones.&lt;/p&gt;
&lt;p&gt;I&amp;#8217;ve prepared the &lt;a href="http://cockpit-project.org/files/zoner.tgz"&gt;zoner package here&lt;/a&gt;. It&amp;#8217;s just two files. To download them and extract to your current directory, and installs it as a Cockpit&amp;nbsp;package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ wget http://cockpit-project.org/files/zoner.tgz -O - | tar -xzf -
$ cd zoner/
$ mkdir -p ~/.local/share/cockpit
$ ln -snf $PWD ~/.local/share/cockpit/zoner
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Previously we &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;talked about&lt;/a&gt; how packages are installed, and what &lt;code&gt;manifest.json&lt;/code&gt; does so I won&amp;#8217;t repeat myself here. But to make sure the above worked correctly, you can run the following command. You should see &lt;code&gt;zoner&lt;/code&gt; listed in the&amp;nbsp;output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ cockpit-bridge --packages
...
zoner: .../.local/share/cockpit/zoner
...
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you&amp;#8217;re logged into Cockpit on this machine, first log out. And log in again. Make sure to log into Cockpit with your current user name, since you installed the package in your home directory. You should now see a new item in the &lt;em&gt;Tools&lt;/em&gt; menu called &lt;em&gt;Time Zone&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pinger tool" src="images/cockpit-zoner-tool.png"&gt;&lt;/p&gt;
&lt;p&gt;Try it out by typing &lt;code&gt;Australia/Tasmania&lt;/code&gt; in the box, and clicking &lt;em&gt;Change&lt;/em&gt;. You should see that the &lt;em&gt;Time Zone&lt;/em&gt; changes. You can verify this by typing the following on the same server in a&amp;nbsp;terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ date
Sa 15. Nov 01:48:01 AEDT 2014
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Try typing an invalid timezone like &lt;code&gt;blah&lt;/code&gt;, and you&amp;#8217;ll see an error message displayed. Now try changing the timezone from the terminal using the &lt;code&gt;timedatectl&lt;/code&gt; command while you have Cockpit open displaying your &lt;em&gt;Time Zone&lt;/em&gt;&amp;nbsp;screen:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo timedatectl set-timezone UTC
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You should see your timezone on your screen update immediately to reflect the new state of the server. So how does this work? Lets take a look at the zoner &lt;span class="caps"&gt;HTML&lt;/span&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Time Zone&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/css&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;container-fluid&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;max-width: 400px&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;cockpit-form-table&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Time Zone&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;current&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;New Zone&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;form-control&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;new&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UTC&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;btn btn-default btn-primary&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;change&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Change&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;button&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
                &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;failure&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;input&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#new&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;current&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#current&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;failure&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#failure&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#change&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;change_zone&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cockpit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dbus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;org.freedesktop.timedate1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;timedate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timedate&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;changed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;display_zone&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;display_zone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timedate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Timezone&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;change_zone&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timedate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SetTimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;change_fail&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;failure&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

        &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;change_fail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nx"&gt;failure&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;err&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First we include &lt;code&gt;jquery.js&lt;/code&gt; and &lt;code&gt;cockpit.js&lt;/code&gt;. &lt;code&gt;cockpit.js&lt;/code&gt; defines the basic &lt;span class="caps"&gt;API&lt;/span&gt; for interacting with the system, as well as Cockpit itself. You can find &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html"&gt;detailed documentation here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/jquery.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;../base1/cockpit.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We also include the cockpit.css file to make sure the look of our tool matches that of Cockpit. The &lt;span class="caps"&gt;HTML&lt;/span&gt; is pretty basic, defining a little form where the current timezone is shown, a field to type an address, a button to click change to a new one, and an area to show&amp;nbsp;errors.&lt;/p&gt;
&lt;p&gt;In the javascript code, first we get a bunch of variables pointing to the &lt;span class="caps"&gt;HTML&lt;/span&gt; elements we want to interact with.
Next we attach a handler to the &lt;em&gt;Change&lt;/em&gt; button so that the &lt;code&gt;change_zone()&lt;/code&gt; function is called when it is&amp;nbsp;clicked.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#change&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;click&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;change_zone&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next we connect to the &lt;a href="http://www.freedesktop.org/wiki/Software/systemd/timedated/"&gt;timedated&lt;/a&gt; DBus service using the &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-dbus-dbus"&gt;&lt;code&gt;cockpit.dbus()&lt;/code&gt;&lt;/a&gt;&amp;nbsp;function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;service&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;cockpit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dbus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;org.freedesktop.timedate1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we make a proxy which represents a particular DBus interface containing methods and properties. Simple services have only one interface. When more than one interface or instance of that interface is present, there are additional arguments to the &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-dbus-proxy"&gt;&lt;code&gt;.proxy()&lt;/code&gt;&lt;/a&gt; method that you can&amp;nbsp;specify.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;timedate&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;proxy&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Each interface proxy has a &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-dbus-proxy-onchanged"&gt;&lt;code&gt;"changed"&lt;/code&gt;&lt;/a&gt; event we can connect to. When properties on the proxy change, or are received for the first time, this event is fired. We use this to call our &lt;code&gt;display_zone()&lt;/code&gt; function and update the display of the current time&amp;nbsp;zone:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timedate&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;changed&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;display_zone&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;Timezone&lt;/code&gt; is a property on the &lt;a href="http://www.freedesktop.org/wiki/Software/systemd/timedated/"&gt;timedated DBus interface&lt;/a&gt;. We can access these properties directly, and the proxy will keep them up to date. Here we use the property to update our display of the current time&amp;nbsp;zone:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;display_zone() {&lt;/span&gt;
    &lt;span class="nx"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;timedate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Timezone&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;SetTimezone&lt;/code&gt; is a method on the &lt;a href="http://www.freedesktop.org/wiki/Software/systemd/timedated/"&gt;timedated DBus interface&lt;/a&gt; interface, and we can invoke it directly as we would a javascript function. In this case we pass the arguments the DBus method expects, a &lt;code&gt;timezone&lt;/code&gt; string, and a &lt;code&gt;user_interaction&lt;/code&gt; boolean.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;change_zone() {&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;call&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;timedate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;SetTimezone&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;input&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In a web browser you cannot block and wait until a method call completes. Anything that doesn&amp;#8217;t happen instantaneously gets its results reported back to you by &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-dbus-done"&gt;means of callback handlers&lt;/a&gt;. jQuery has a standard interface &lt;a href="http://api.jquery.com/deferred.promise/"&gt;called a promise&lt;/a&gt;. You add handlers by calling the &lt;code&gt;.done()&lt;/code&gt; or &lt;code&gt;.fail()&lt;/code&gt; methods and registering&amp;nbsp;callbacks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    call.fail(change_fail);
    failure.empty();
}
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;change_fail()&lt;/code&gt; displays any failures that happen. In this case, &lt;code&gt;SetTimezone&lt;/code&gt; DBus method has no return value, however if there were, we could use something like &lt;code&gt;call.done(myhandler)&lt;/code&gt; to register a handler to receive&amp;nbsp;them.&lt;/p&gt;
&lt;p&gt;Notice that we relied on DBus to tell us when things changed and just updated the display from our event handler. That way we reacted both when the time zone changed due to an action in Cockpit, as well as an action on the&amp;nbsp;server.&lt;/p&gt;
&lt;p&gt;Again this is a simple example, but I hope it will whet your appetite to what &lt;a href="http://cockpit-project.org/guide/latest/api-cockpit.html#latest-dbus"&gt;Cockpit can do with DBus&lt;/a&gt;. Obviously you can also do signal handling, working with return values from methods, tracking all instances of a given interface, and other stuff you would expect to do as a DBus&amp;nbsp;client.&lt;/p&gt;</content><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Cockpit Multi-Server Dashboard</title><link href="http://cockpit-project.org/blog/cockpit-multi-server-dashboard.html" rel="alternate"></link><published>2014-11-04T00:00:00+00:00</published><updated>2014-11-04T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-11-04:/blog/cockpit-multi-server-dashboard.html</id><summary type="html">&lt;p&gt;Andreas and Marius have been working on implementing a new multi-server dash
board for Cockpit. It&amp;#8217;s really looking&amp;nbsp;great.&lt;/p&gt;
&lt;p&gt;The goal here is that the dash board should work with either one server or several,
and give you an overview of what&amp;#8217;s going on. Problems that require attention …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Andreas and Marius have been working on implementing a new multi-server dash
board for Cockpit. It&amp;#8217;s really looking&amp;nbsp;great.&lt;/p&gt;
&lt;p&gt;The goal here is that the dash board should work with either one server or several,
and give you an overview of what&amp;#8217;s going on. Problems that require attention should
be highlighted clearly. You should be able to click in spots to jump either to a
server, a sub-system, a service/container/pod or to the source of a&amp;nbsp;problem.&lt;/p&gt;
&lt;p&gt;The graphs will be correlated across multiple machines, and draggable. Hopefully down
road we&amp;#8217;ll be using a source of data like &lt;a href="http://www.performancecopilot.org/"&gt;&lt;span class="caps"&gt;PCP&lt;/span&gt;&lt;/a&gt; to
gather the data more consistently. Problems will show up on the graphs as clickable.
You can add and remove servers, and we want to show the state of important services/server
applications/pods on those&amp;nbsp;servers.&lt;/p&gt;
&lt;p&gt;Once the basic code has landed, it would be good to tie this into Kubernetes as well.
If running a &lt;a href="https://github.com/GoogleCloudPlatform/kubernetes"&gt;Kubernetes&lt;/a&gt; cluster,
and Cockpit is loaded on the master, we should use information from Kubernetes to
populate the&amp;nbsp;dashboard.&lt;/p&gt;
&lt;p&gt;Here are some wireframes, click to&amp;nbsp;expand:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Multi server dashboard wireframes" src="images/navigation-horizontal-2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/cockpit-project/cockpit/pull/1455"&gt;Pull request is&amp;nbsp;here &lt;/a&gt;&lt;/p&gt;</content><category term="cockpit"></category><category term="kubernetes"></category></entry><entry><title>DBus is powerful IPC</title><link href="http://cockpit-project.org/blog/d-bus-is-powerful-ipc.html" rel="alternate"></link><published>2014-11-04T00:00:00+00:00</published><updated>2014-11-04T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-11-04:/blog/d-bus-is-powerful-ipc.html</id><summary type="html">&lt;p&gt;D-Bus is powerful &lt;span class="caps"&gt;IPC&lt;/span&gt; Cockpit is heavily built around DBus. We send DBus over our
&lt;a href="https://github.com/cockpit-project/cockpit/blob/master/doc/protocol.md"&gt;WebSocket transport&lt;/a&gt;,
and marshal them in &lt;span class="caps"&gt;JSON&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;DBus is powerful, with lots of capabilities. Not all projects use all of these, but so many of
these capabilities are what allow Cockpit to implement its &lt;span class="caps"&gt;UI …&lt;/span&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;D-Bus is powerful &lt;span class="caps"&gt;IPC&lt;/span&gt; Cockpit is heavily built around DBus. We send DBus over our
&lt;a href="https://github.com/cockpit-project/cockpit/blob/master/doc/protocol.md"&gt;WebSocket transport&lt;/a&gt;,
and marshal them in &lt;span class="caps"&gt;JSON&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;DBus is powerful, with lots of capabilities. Not all projects use all of these, but so many of
these capabilities are what allow Cockpit to implement its &lt;span class="caps"&gt;UI&lt;/span&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Method Call&amp;nbsp;Transactions&lt;/li&gt;
&lt;li&gt;Object&amp;nbsp;Oriented&lt;/li&gt;
&lt;li&gt;Efficient&amp;nbsp;Signalling&lt;/li&gt;
&lt;li&gt;Properties and&amp;nbsp;notifications&lt;/li&gt;
&lt;li&gt;Race free watching of entire Object trees for&amp;nbsp;changes&lt;/li&gt;
&lt;li&gt;Broadcasting&lt;/li&gt;
&lt;li&gt;Discovery&lt;/li&gt;
&lt;li&gt;Introspection&lt;/li&gt;
&lt;li&gt;Policy&lt;/li&gt;
&lt;li&gt;Activation&lt;/li&gt;
&lt;li&gt;Synchronization&lt;/li&gt;
&lt;li&gt;Type-safe&amp;nbsp;Marshalling&lt;/li&gt;
&lt;li&gt;Caller&amp;nbsp;Credentials&lt;/li&gt;
&lt;li&gt;Security&lt;/li&gt;
&lt;li&gt;Debug&amp;nbsp;Monitoring&lt;/li&gt;
&lt;li&gt;File Descriptor&amp;nbsp;Passing&lt;/li&gt;
&lt;li&gt;Language&amp;nbsp;agnostic&lt;/li&gt;
&lt;li&gt;Network&amp;nbsp;transparency&lt;/li&gt;
&lt;li&gt;No trust&amp;nbsp;required&lt;/li&gt;
&lt;li&gt;High-level error&amp;nbsp;concept&lt;/li&gt;
&lt;li&gt;Adhoc type&amp;nbsp;definitions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lennart goes into these further &lt;a href="http://youtu.be/HPbQzm_iz_k?t=2m6s"&gt;in a kdbus talk&lt;/a&gt;, as well as some of the weaknesses of&amp;nbsp;DBus.&lt;/p&gt;</content><category term="dbus"></category><category term="linux"></category></entry><entry><title>Cockpit has Docker pull support</title><link href="http://cockpit-project.org/blog/cockpit-has-docker-pull-support.html" rel="alternate"></link><published>2014-06-24T00:00:00+00:00</published><updated>2014-06-24T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-06-24:/blog/cockpit-has-docker-pull-support.html</id><summary type="html">&lt;p&gt;Cockpit 0.12 now has support for pulling Docker images from the
&lt;a href="https://registry.hub.docker.com/"&gt;Docker registry&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Docker pull support" src="images/cockpit-docker-pull.png"&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately Docker doesn&amp;#8217;t have support for cancelling the pull of an image. So that
sort of hampers the &lt;span class="caps"&gt;UI&lt;/span&gt; a bit. At least for&amp;nbsp;now.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit 0.12 now has support for pulling Docker images from the
&lt;a href="https://registry.hub.docker.com/"&gt;Docker registry&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Docker pull support" src="images/cockpit-docker-pull.png"&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately Docker doesn&amp;#8217;t have support for cancelling the pull of an image. So that
sort of hampers the &lt;span class="caps"&gt;UI&lt;/span&gt; a bit. At least for&amp;nbsp;now.&lt;/p&gt;</content><category term="cockpit"></category><category term="docker"></category></entry><entry><title>Cockpit Simple Networking Configuration</title><link href="http://cockpit-project.org/blog/cockpit-simple-networking-configuration.html" rel="alternate"></link><published>2014-06-20T00:00:00+00:00</published><updated>2014-06-20T00:00:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-06-20:/blog/cockpit-simple-networking-configuration.html</id><summary type="html">&lt;p&gt;Cockpit 0.11 now has an all new simple Networking &lt;span class="caps"&gt;UI&lt;/span&gt;. Still some work to do, but it&amp;#8217;s
coming together. You can see it&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cockpit simple networking configuration" src="images/cockpit-simple-network.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cockpit 0.11 now has an all new simple Networking &lt;span class="caps"&gt;UI&lt;/span&gt;. Still some work to do, but it&amp;#8217;s
coming together. You can see it&amp;nbsp;here:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Cockpit simple networking configuration" src="images/cockpit-simple-network.png"&gt;&lt;/p&gt;</content><category term="cockpit"></category><category term="network-manager"></category><category term="linux"></category></entry><entry><title>Cockpit does Docker</title><link href="http://cockpit-project.org/blog/cockpit-does-docker.html" rel="alternate"></link><published>2014-04-25T19:39:00+00:00</published><updated>2014-04-25T19:39:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-04-25:/blog/cockpit-does-docker.html</id><summary type="html">&lt;p&gt;Here&amp;#8217;s a short video showing how Cockpit manages Docker containers.
Cockpit is in &lt;span class="caps"&gt;RHEL&lt;/span&gt; branding here, but it&amp;#8217;s basically the same thing as
you get from &lt;a href="http://cockpit-project.org/"&gt;cockpit-project.org&lt;/a&gt;&lt;/p&gt;
&lt;iframe src="//www.youtube.com/embed/5dM4CqIp2s4" allowfullscreen="" frameborder="0" height="480" width="853"&gt;&lt;/iframe&gt;

&lt;p&gt;This &lt;span class="caps"&gt;UI&lt;/span&gt; is going to be refined somewhat, but it&amp;#8217;s nice to see things
coming&amp;nbsp;together.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here&amp;#8217;s a short video showing how Cockpit manages Docker containers.
Cockpit is in &lt;span class="caps"&gt;RHEL&lt;/span&gt; branding here, but it&amp;#8217;s basically the same thing as
you get from &lt;a href="http://cockpit-project.org/"&gt;cockpit-project.org&lt;/a&gt;&lt;/p&gt;
&lt;iframe src="//www.youtube.com/embed/5dM4CqIp2s4" allowfullscreen="" frameborder="0" height="480" width="853"&gt;&lt;/iframe&gt;

&lt;p&gt;This &lt;span class="caps"&gt;UI&lt;/span&gt; is going to be refined somewhat, but it&amp;#8217;s nice to see things
coming&amp;nbsp;together.&lt;/p&gt;</content><category term="cockpit"></category><category term="technical"></category></entry><entry><title>Cockpit has a terminal</title><link href="http://cockpit-project.org/blog/cockpit-has-terminal.html" rel="alternate"></link><published>2014-04-22T16:06:00+00:00</published><updated>2014-04-22T16:06:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-04-22:/blog/cockpit-has-terminal.html</id><summary type="html">&lt;p&gt;&lt;a href="http://cockpit-project.org/"&gt;Cockpit&lt;/a&gt; 0.5 now has a nice terminal in a web browser. &lt;span class="caps"&gt;AKA&lt;/span&gt;
&lt;a href="https://github.com/chjj/term.js/"&gt;term.js&lt;/a&gt; is&amp;nbsp;awesome.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Cockpit terminal" src="images/cockpit-terminal.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://cockpit-project.org/"&gt;Cockpit&lt;/a&gt; 0.5 now has a nice terminal in a web browser. &lt;span class="caps"&gt;AKA&lt;/span&gt;
&lt;a href="https://github.com/chjj/term.js/"&gt;term.js&lt;/a&gt; is&amp;nbsp;awesome.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Cockpit terminal" src="images/cockpit-terminal.png"&gt;&lt;/p&gt;</content><category term="cockpit"></category><category term="technical"></category></entry><entry><title>Introducing Cockpit</title><link href="http://cockpit-project.org/blog/introducing-cockpit.html" rel="alternate"></link><published>2014-02-13T12:46:00+00:00</published><updated>2014-02-13T12:46:00+00:00</updated><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-02-13:/blog/introducing-cockpit.html</id><summary type="html">&lt;p&gt;Gave a &lt;a href="http://thewalter.net/stef/misc/cockpit-devconf-2014-talk.pdf"&gt;talk at DevConf&lt;/a&gt; in Brno about the project a bunch of us have
been working on: &lt;a href="http://cockpit-project.org/"&gt;Cockpit&lt;/a&gt;. It&amp;#8217;s a &lt;span class="caps"&gt;UI&lt;/span&gt; for Linux Servers. Currently in
the prototype&amp;nbsp;stage&amp;#8230;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Cockpit login" src="images/cockpit1.png"&gt;&lt;/p&gt;
&lt;p&gt;Hopefully there&amp;#8217;ll be a video of the talk available soon. You can try
out the Cockpit prototype in …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Gave a &lt;a href="http://thewalter.net/stef/misc/cockpit-devconf-2014-talk.pdf"&gt;talk at DevConf&lt;/a&gt; in Brno about the project a bunch of us have
been working on: &lt;a href="http://cockpit-project.org/"&gt;Cockpit&lt;/a&gt;. It&amp;#8217;s a &lt;span class="caps"&gt;UI&lt;/span&gt; for Linux Servers. Currently in
the prototype&amp;nbsp;stage&amp;#8230;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Cockpit login" src="images/cockpit1.png"&gt;&lt;/p&gt;
&lt;p&gt;Hopefully there&amp;#8217;ll be a video of the talk available soon. You can try
out the Cockpit prototype in Fedora like&amp;nbsp;so:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# yum install --enablerepo=updates-testing cockpit
# setenforce 0 # issue 200
# systemctl enable cockpit-ws.socket
$ xdg-open http://localhost:21064
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Don&amp;#8217;t run this on a system you care about (yet).&lt;/strong&gt; Sorry about the
certificate warning. Groan &amp;#8230; I know &amp;#8230; working on&amp;nbsp;that.  &lt;/p&gt;
&lt;p&gt;Needless to say I&amp;#8217;m excited about where this is&amp;nbsp;going&amp;#8230;&lt;/p&gt;</content><category term="technical"></category></entry></feed>