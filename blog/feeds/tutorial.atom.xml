<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cockpit Project - tutorial</title><link href="http://cockpit-project.org/blog/" rel="alternate"></link><link href="http://cockpit-project.org/blog/feeds/tutorial.atom.xml" rel="self"></link><id>http://cockpit-project.org/blog/</id><updated>2015-10-08T00:00:00+00:00</updated><entry><title>Using Vagrant to Develop Cockpit</title><link href="http://cockpit-project.org/blog/cockpit-vagrantfile.html" rel="alternate"></link><published>2015-10-08T00:00:00+00:00</published><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-10-08:/blog/cockpit-vagrantfile.html/</id><summary type="html">&lt;p&gt;Starting with Cockpit release 0.79 you can use &lt;a href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt; to bring up a &lt;span class="caps"&gt;VM&lt;/span&gt; in which
you can test or develop Cockpit. The &lt;span class="caps"&gt;VM&lt;/span&gt; is isolated from your main system so any system configuration
you change via Cockpit will only happen in the &lt;span class="caps"&gt;VM&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The Vagrant &lt;span class="caps"&gt;VM&lt;/span&gt; mounts the …&lt;/p&gt;</summary><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Making REST calls from Javascript in Cockpit</title><link href="http://cockpit-project.org/blog/making-rest-calls-from-javascript-in-cockpit.html" rel="alternate"></link><published>2015-07-10T00:00:00+00:00</published><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2015-07-10:/blog/making-rest-calls-from-javascript-in-cockpit.html/</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. In &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;earlier&lt;/a&gt; &lt;a href="http://cockpit-project.org/blog/using-dbus-from-javascript-in-cockpit.html"&gt;tutorials&lt;/a&gt; there&amp;#8217;s a guide on how to add components to&amp;nbsp;Cockpit.&lt;/p&gt;
&lt;p&gt;Not all of the &lt;a href="http://cockpit-project.org/blog/d-bus-is-powerful-ipc.html"&gt;system APIs use DBus&lt;/a&gt;. So sometimes we find ourselves in a …&lt;/p&gt;</summary><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Protocol for Web access to System APIs</title><link href="http://cockpit-project.org/blog/protocol-for-web-access-to-system-apis.html" rel="alternate"></link><published>2014-12-16T00:00:00+00:00</published><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-12-16:/blog/protocol-for-web-access-to-system-apis.html/</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.48 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;A Linux system today has a lot of local system configuration APIs. I&amp;#8217;m not talking about library APIs here, but things like DBus services, command/scripts to be executed, or files placed in various locations …&lt;/p&gt;</summary><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Creating Plugins for the Cockpit User Interface</title><link href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html" rel="alternate"></link><published>2014-11-13T00:00:00+00:00</published><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-11-13:/blog/creating-plugins-for-the-cockpit-user-interface.html/</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. And you can add stuff to that user interface. Cockpit is internally built of various components. Each component is &lt;span class="caps"&gt;HTML&lt;/span&gt;, with Javascript logic that makes it work, and &lt;span class="caps"&gt;CSS …&lt;/span&gt;&lt;/p&gt;</summary><category term="cockpit"></category><category term="linux"></category></entry><entry><title>Using DBus from Javascript in Cockpit</title><link href="http://cockpit-project.org/blog/using-dbus-from-javascript-in-cockpit.html" rel="alternate"></link><published>2014-11-13T00:00:00+00:00</published><author><name>Cockpit Project</name></author><id>tag:cockpit-project.org,2014-11-13:/blog/using-dbus-from-javascript-in-cockpit.html/</id><summary type="html">&lt;p&gt;&lt;em&gt;Note: This post has been updated for changes in Cockpit 0.90 and&amp;nbsp;later.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://cockpit-project.org"&gt;Cockpit is a user interface for servers&lt;/a&gt;. As we covered in the &lt;a href="http://cockpit-project.org/blog/creating-plugins-for-the-cockpit-user-interface.html"&gt;last tutorial&lt;/a&gt; you can add user interface component to Cockpit, and build your own parts of the Server &lt;span class="caps"&gt;UI&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Much of Cockpit interacts with …&lt;/p&gt;</summary><category term="cockpit"></category><category term="linux"></category></entry></feed>